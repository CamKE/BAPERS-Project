/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bapers.gui;

import bapers.controller.Controller;
import bapers.user.UserDetails;
import java.awt.CardLayout;
import java.awt.Window;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author CameronE
 */
public class MainFrame extends javax.swing.JFrame {

    private final CardLayout card1;
    private final CardLayout card2;
    private final Controller controller;
    DefaultTableModel tblModel;

    /**
     * Creates new form MainFrame
     *
     * @param controller
     */
    public MainFrame(Controller controller) {
        // Set the controller 
        this.controller = controller;
        initComponents();
        // set the card layout for the main section of the screen
        card1 = (CardLayout) cardPanel1.getLayout();
        // set the card layout for the top section of the screen
        card2 = (CardLayout) cardPanel2.getLayout();
        // hide the button on the welcome bar
        backButton.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        cardPanel1 = new javax.swing.JPanel();
        welcomePage = new javax.swing.JPanel();
        BAPERSLabel = new javax.swing.JLabel();
        loginPageButton = new javax.swing.JButton();
        RestorePageButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        tempButton = new javax.swing.JButton();
        homePageOM = new javax.swing.JButton();
        homePageSM = new javax.swing.JButton();
        homePageT = new javax.swing.JButton();
        homePageR = new javax.swing.JButton();
        loginPage = new javax.swing.JPanel();
        loginLabel = new javax.swing.JLabel();
        loginButton = new javax.swing.JButton();
        passwordField = new javax.swing.JPasswordField();
        userIDField = new javax.swing.JTextField();
        restorePage = new javax.swing.JPanel();
        restoreLabel = new javax.swing.JLabel();
        RestoreButton = new javax.swing.JButton();
        chooseFileButton = new javax.swing.JButton();
        fileChosenField = new javax.swing.JTextField();
        userSearchPage = new javax.swing.JPanel();
        findUserLabel = new javax.swing.JLabel();
        userNumberLabel = new javax.swing.JLabel();
        UserNumberField = new javax.swing.JTextField();
        UserFirstnameField = new javax.swing.JTextField();
        userFirstnameLabel = new javax.swing.JLabel();
        UserLastnameField = new javax.swing.JTextField();
        userLastnameLabel = new javax.swing.JLabel();
        UserRoleSearchDrop = new javax.swing.JComboBox<>();
        userLastnameLabel1 = new javax.swing.JLabel();
        searchUserButton = new javax.swing.JButton();
        backupPage = new javax.swing.JPanel();
        BackupDataLabel = new javax.swing.JLabel();
        backupButton = new javax.swing.JButton();
        chooseLocationButton = new javax.swing.JButton();
        locationChosenField = new javax.swing.JTextField();
        backupDestinationLabel = new javax.swing.JLabel();
        userResultsPage = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        userResultsTable = new javax.swing.JTable();
        searchAgainButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        changeRoleButton = new javax.swing.JButton();
        createUserPage = new javax.swing.JPanel();
        newUserLabel = new javax.swing.JLabel();
        userLastNameField = new javax.swing.JTextField();
        userFirstNameField = new javax.swing.JTextField();
        NewRepeatPasswordField = new javax.swing.JPasswordField();
        NewPasswordField = new javax.swing.JPasswordField();
        userRoleComboBox = new javax.swing.JComboBox<>();
        firstnameLabel = new javax.swing.JLabel();
        lastnameLabel = new javax.swing.JLabel();
        RoleLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        ReenterPasswordLabel = new javax.swing.JLabel();
        createUserButton = new javax.swing.JButton();
        officeManagerHomePage = new javax.swing.JPanel();
        officeManagerPage = new javax.swing.JPanel();
        jobOfficeManager = new javax.swing.JButton();
        standardJobsOfficeManager = new javax.swing.JButton();
        acceptPaymentOfficeManager = new javax.swing.JButton();
        tasksOfficeManager = new javax.swing.JButton();
        reportsOfficeManager = new javax.swing.JButton();
        usersOfficeManager = new javax.swing.JButton();
        manageCustomersOfficeManager = new javax.swing.JButton();
        settingsOfficeManager = new javax.swing.JButton();
        shiftManagerHomePage = new javax.swing.JPanel();
        shiftManagerPage = new javax.swing.JPanel();
        jobShiftManager = new javax.swing.JButton();
        standardJobsShiftManager = new javax.swing.JButton();
        acceptPaymentShiftManager = new javax.swing.JButton();
        tasksShiftManager = new javax.swing.JButton();
        reportsShiftManager = new javax.swing.JButton();
        settingsShiftManager = new javax.swing.JButton();
        technicianHomePage = new javax.swing.JPanel();
        technicianPage = new javax.swing.JPanel();
        jobEnquiryTechnician = new javax.swing.JButton();
        receptionistHomePage = new javax.swing.JPanel();
        receptionHomePage = new javax.swing.JPanel();
        jobReceptionist = new javax.swing.JButton();
        acceptPaymentReceptionist = new javax.swing.JButton();
        createTaskPage = new javax.swing.JPanel();
        newTaskLabel1 = new javax.swing.JLabel();
        descriptionNewTaskField = new javax.swing.JTextField();
        durationNewTaskDD = new javax.swing.JComboBox<>();
        descriptionLabel = new javax.swing.JLabel();
        durationLabel = new javax.swing.JLabel();
        priceLabel = new javax.swing.JLabel();
        departmentNewTaskLabel = new javax.swing.JLabel();
        shelfSlotNewTaskLabel = new javax.swing.JLabel();
        createNewTaskButton = new javax.swing.JButton();
        cancelButtonCreateTask = new javax.swing.JButton();
        shelfSlotTaskDD = new javax.swing.JComboBox<>();
        departmentNewTaskDD = new javax.swing.JComboBox<>();
        durationNewTaskMinsDD = new javax.swing.JComboBox<>();
        priceNewTaskField = new javax.swing.JTextField();
        hoursLabel = new javax.swing.JLabel();
        minutesLabel = new javax.swing.JLabel();
        cardPanel2 = new javax.swing.JPanel();
        welcomeBar = new javax.swing.JPanel();
        backButton = new javax.swing.JButton();
        welcomePageLabel = new javax.swing.JLabel();
        homeBar = new javax.swing.JPanel();
        homeButton = new javax.swing.JButton();
        logOutButton = new javax.swing.JButton();
        pageLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(900, 700));
        setMinimumSize(new java.awt.Dimension(900, 700));
        setPreferredSize(new java.awt.Dimension(900, 700));
        setResizable(false);

        cardPanel1.setBackground(new java.awt.Color(255, 204, 204));
        cardPanel1.setMaximumSize(new java.awt.Dimension(900, 640));
        cardPanel1.setPreferredSize(new java.awt.Dimension(900, 640));
        cardPanel1.setLayout(new java.awt.CardLayout());

        welcomePage.setBackground(new java.awt.Color(61, 96, 146));
        welcomePage.setMaximumSize(new java.awt.Dimension(900, 640));
        welcomePage.setMinimumSize(new java.awt.Dimension(900, 640));
        welcomePage.setPreferredSize(new java.awt.Dimension(900, 640));

        BAPERSLabel.setFont(new java.awt.Font("Tahoma", 1, 90)); // NOI18N
        BAPERSLabel.setForeground(new java.awt.Color(255, 255, 255));
        BAPERSLabel.setText("B   A   P   E   R   S");

        loginPageButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        loginPageButton.setText("Login");
        loginPageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginPageButtonActionPerformed(evt);
            }
        });

        RestorePageButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        RestorePageButton.setText("Restore");
        RestorePageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RestorePageButtonActionPerformed(evt);
            }
        });

        jButton1.setText("backup");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("searchuser");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        tempButton.setText("createUser");
        tempButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tempButtonActionPerformed(evt);
            }
        });

        homePageOM.setText("homePageOM");
        homePageOM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homePageOMActionPerformed(evt);
            }
        });

        homePageSM.setText("homePageSM");
        homePageSM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homePageSMActionPerformed(evt);
            }
        });

        homePageT.setText("homePageT");
        homePageT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homePageTActionPerformed(evt);
            }
        });

        homePageR.setText("homePageR");
        homePageR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homePageRActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout welcomePageLayout = new javax.swing.GroupLayout(welcomePage);
        welcomePage.setLayout(welcomePageLayout);
        welcomePageLayout.setHorizontalGroup(
            welcomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(welcomePageLayout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(welcomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(BAPERSLabel)
                    .addComponent(loginPageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RestorePageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(75, 75, 75))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, welcomePageLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(welcomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(welcomePageLayout.createSequentialGroup()
                        .addComponent(homePageR)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(homePageT)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(homePageSM)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(homePageOM))
                    .addGroup(welcomePageLayout.createSequentialGroup()
                        .addComponent(tempButton)
                        .addGap(71, 71, 71)
                        .addComponent(jButton1)
                        .addGap(60, 60, 60)
                        .addComponent(jButton2)))
                .addGap(69, 69, 69))
        );
        welcomePageLayout.setVerticalGroup(
            welcomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(welcomePageLayout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(BAPERSLabel)
                .addGap(119, 119, 119)
                .addComponent(loginPageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(RestorePageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(welcomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(homePageOM)
                    .addComponent(homePageSM)
                    .addComponent(homePageT)
                    .addComponent(homePageR))
                .addGap(18, 18, 18)
                .addGroup(welcomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(tempButton))
                .addGap(99, 99, 99))
        );

        cardPanel1.add(welcomePage, "welcome");

        loginPage.setBackground(new java.awt.Color(61, 96, 146));
        loginPage.setMaximumSize(new java.awt.Dimension(900, 640));
        loginPage.setMinimumSize(new java.awt.Dimension(900, 640));
        loginPage.setPreferredSize(new java.awt.Dimension(900, 640));

        loginLabel.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        loginLabel.setForeground(new java.awt.Color(255, 255, 255));
        loginLabel.setText("Login");

        loginButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        loginButton.setText("Login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        passwordField.setMaximumSize(new java.awt.Dimension(250, 42));
        passwordField.setMinimumSize(new java.awt.Dimension(250, 42));
        passwordField.setPreferredSize(new java.awt.Dimension(250, 42));

        userIDField.setMaximumSize(new java.awt.Dimension(250, 42));
        userIDField.setMinimumSize(new java.awt.Dimension(250, 42));
        userIDField.setPreferredSize(new java.awt.Dimension(250, 42));

        javax.swing.GroupLayout loginPageLayout = new javax.swing.GroupLayout(loginPage);
        loginPage.setLayout(loginPageLayout);
        loginPageLayout.setHorizontalGroup(
            loginPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPageLayout.createSequentialGroup()
                .addContainerGap(326, Short.MAX_VALUE)
                .addGroup(loginPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(loginLabel)
                    .addComponent(userIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(324, 324, 324))
        );
        loginPageLayout.setVerticalGroup(
            loginPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPageLayout.createSequentialGroup()
                .addGap(215, 215, 215)
                .addComponent(loginLabel)
                .addGap(40, 40, 40)
                .addComponent(userIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(110, 110, 110))
        );

        cardPanel1.add(loginPage, "login");

        restorePage.setBackground(new java.awt.Color(61, 96, 146));
        restorePage.setMaximumSize(new java.awt.Dimension(900, 640));
        restorePage.setMinimumSize(new java.awt.Dimension(900, 640));
        restorePage.setPreferredSize(new java.awt.Dimension(900, 640));

        restoreLabel.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        restoreLabel.setForeground(new java.awt.Color(255, 255, 255));
        restoreLabel.setText("Restore");

        RestoreButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        RestoreButton.setText("Restore");
        RestoreButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RestoreButtonActionPerformed(evt);
            }
        });

        chooseFileButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        chooseFileButton.setText("Choose file");
        chooseFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseFileButtonActionPerformed(evt);
            }
        });

        fileChosenField.setMaximumSize(new java.awt.Dimension(250, 37));
        fileChosenField.setMinimumSize(new java.awt.Dimension(250, 37));
        fileChosenField.setPreferredSize(new java.awt.Dimension(250, 37));

        javax.swing.GroupLayout restorePageLayout = new javax.swing.GroupLayout(restorePage);
        restorePage.setLayout(restorePageLayout);
        restorePageLayout.setHorizontalGroup(
            restorePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, restorePageLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(restorePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(RestoreButton, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(restoreLabel))
                .addGap(380, 380, 380))
            .addGroup(restorePageLayout.createSequentialGroup()
                .addGap(242, 242, 242)
                .addComponent(chooseFileButton)
                .addGap(17, 17, 17)
                .addComponent(fileChosenField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(242, 242, 242))
        );
        restorePageLayout.setVerticalGroup(
            restorePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(restorePageLayout.createSequentialGroup()
                .addGap(215, 215, 215)
                .addComponent(restoreLabel)
                .addGap(40, 40, 40)
                .addGroup(restorePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(chooseFileButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fileChosenField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(RestoreButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(211, Short.MAX_VALUE))
        );

        cardPanel1.add(restorePage, "restore");

        userSearchPage.setBackground(new java.awt.Color(61, 96, 146));
        userSearchPage.setMaximumSize(new java.awt.Dimension(900, 640));
        userSearchPage.setMinimumSize(new java.awt.Dimension(900, 640));

        findUserLabel.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        findUserLabel.setForeground(new java.awt.Color(255, 255, 255));
        findUserLabel.setText("Find User");

        userNumberLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        userNumberLabel.setForeground(new java.awt.Color(255, 255, 255));
        userNumberLabel.setText("User number:");

        UserNumberField.setMaximumSize(new java.awt.Dimension(250, 37));
        UserNumberField.setMinimumSize(new java.awt.Dimension(250, 37));
        UserNumberField.setPreferredSize(new java.awt.Dimension(250, 37));

        UserFirstnameField.setMaximumSize(new java.awt.Dimension(250, 37));
        UserFirstnameField.setMinimumSize(new java.awt.Dimension(250, 37));
        UserFirstnameField.setPreferredSize(new java.awt.Dimension(250, 37));

        userFirstnameLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        userFirstnameLabel.setForeground(new java.awt.Color(255, 255, 255));
        userFirstnameLabel.setText("Firstname:");

        UserLastnameField.setMaximumSize(new java.awt.Dimension(250, 37));
        UserLastnameField.setMinimumSize(new java.awt.Dimension(250, 37));
        UserLastnameField.setPreferredSize(new java.awt.Dimension(250, 37));

        userLastnameLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        userLastnameLabel.setForeground(new java.awt.Color(255, 255, 255));
        userLastnameLabel.setText("Lastname:");

        UserRoleSearchDrop.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"Any", "Office Manager","Shift Manager","Receptionist","Technician" }));
        UserRoleSearchDrop.setMaximumSize(new java.awt.Dimension(250, 45));
        UserRoleSearchDrop.setMinimumSize(new java.awt.Dimension(250, 45));
        UserRoleSearchDrop.setPreferredSize(new java.awt.Dimension(250, 45));
        UserRoleSearchDrop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserRoleSearchDropActionPerformed(evt);
            }
        });

        userLastnameLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        userLastnameLabel1.setForeground(new java.awt.Color(255, 255, 255));
        userLastnameLabel1.setText("Role:");

        searchUserButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        searchUserButton.setText("Search");
        searchUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchUserButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout userSearchPageLayout = new javax.swing.GroupLayout(userSearchPage);
        userSearchPage.setLayout(userSearchPageLayout);
        userSearchPageLayout.setHorizontalGroup(
            userSearchPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userSearchPageLayout.createSequentialGroup()
                .addGroup(userSearchPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(userSearchPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(userSearchPageLayout.createSequentialGroup()
                            .addGap(364, 364, 364)
                            .addComponent(findUserLabel))
                        .addGroup(userSearchPageLayout.createSequentialGroup()
                            .addGap(235, 235, 235)
                            .addComponent(userNumberLabel)
                            .addGap(18, 18, 18)
                            .addComponent(UserNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(userSearchPageLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(userSearchPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(userSearchPageLayout.createSequentialGroup()
                                .addComponent(userFirstnameLabel)
                                .addGap(18, 18, 18)
                                .addComponent(UserFirstnameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(userSearchPageLayout.createSequentialGroup()
                                .addGroup(userSearchPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(userLastnameLabel)
                                    .addComponent(userLastnameLabel1))
                                .addGap(18, 18, 18)
                                .addGroup(userSearchPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(UserRoleSearchDrop, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(UserLastnameField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addGap(235, 235, 235))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, userSearchPageLayout.createSequentialGroup()
                .addComponent(searchUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71))
        );
        userSearchPageLayout.setVerticalGroup(
            userSearchPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userSearchPageLayout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addComponent(findUserLabel)
                .addGap(25, 25, 25)
                .addGroup(userSearchPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userNumberLabel)
                    .addComponent(UserNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addGroup(userSearchPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UserFirstnameField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userFirstnameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(userSearchPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UserLastnameField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userLastnameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(userSearchPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UserRoleSearchDrop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userLastnameLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 114, Short.MAX_VALUE)
                .addComponent(searchUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65))
        );

        cardPanel1.add(userSearchPage, "userSearch");

        backupPage.setBackground(new java.awt.Color(61, 96, 146));
        backupPage.setMaximumSize(new java.awt.Dimension(900, 640));
        backupPage.setMinimumSize(new java.awt.Dimension(900, 640));

        BackupDataLabel.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        BackupDataLabel.setForeground(new java.awt.Color(255, 255, 255));
        BackupDataLabel.setText("Backup Data");

        backupButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        backupButton.setText("Backup");
        backupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backupButtonActionPerformed(evt);
            }
        });

        chooseLocationButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        chooseLocationButton.setText("Choose location");
        chooseLocationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseLocationButtonActionPerformed(evt);
            }
        });

        locationChosenField.setEditable(false);
        locationChosenField.setMaximumSize(new java.awt.Dimension(250, 37));
        locationChosenField.setMinimumSize(new java.awt.Dimension(250, 37));
        locationChosenField.setPreferredSize(new java.awt.Dimension(250, 37));

        backupDestinationLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        backupDestinationLabel.setForeground(new java.awt.Color(255, 255, 255));
        backupDestinationLabel.setText("Back up destination:");

        javax.swing.GroupLayout backupPageLayout = new javax.swing.GroupLayout(backupPage);
        backupPage.setLayout(backupPageLayout);
        backupPageLayout.setHorizontalGroup(
            backupPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backupPageLayout.createSequentialGroup()
                .addContainerGap(334, Short.MAX_VALUE)
                .addGroup(backupPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backupPageLayout.createSequentialGroup()
                        .addComponent(backupButton, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backupPageLayout.createSequentialGroup()
                        .addComponent(BackupDataLabel)
                        .addContainerGap(335, Short.MAX_VALUE))))
            .addGroup(backupPageLayout.createSequentialGroup()
                .addGap(194, 194, 194)
                .addComponent(backupDestinationLabel)
                .addGap(18, 18, 18)
                .addGroup(backupPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chooseLocationButton)
                    .addComponent(locationChosenField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        backupPageLayout.setVerticalGroup(
            backupPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backupPageLayout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addComponent(BackupDataLabel)
                .addGap(18, 18, 18)
                .addGroup(backupPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(locationChosenField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backupDestinationLabel))
                .addGap(25, 25, 25)
                .addComponent(chooseLocationButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 246, Short.MAX_VALUE)
                .addComponent(backupButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80))
        );

        cardPanel1.add(backupPage, "backup");

        userResultsPage.setBackground(new java.awt.Color(61, 96, 146));
        userResultsPage.setMaximumSize(new java.awt.Dimension(900, 640));
        userResultsPage.setMinimumSize(new java.awt.Dimension(900, 640));

        jScrollPane1.setPreferredSize(new java.awt.Dimension(750, 400));

        userResultsTable.setAutoCreateRowSorter(true);
        userResultsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Account number", "Firstname", "Lastname", "Role", "Date registered", "Action"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        userResultsTable.setMaximumSize(new java.awt.Dimension(750, 500));
        userResultsTable.setMinimumSize(new java.awt.Dimension(750, 500));
        userResultsTable.setPreferredSize(new java.awt.Dimension(750, 500));
        userResultsTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(userResultsTable);
        if (userResultsTable.getColumnModel().getColumnCount() > 0) {
            userResultsTable.getColumnModel().getColumn(0).setResizable(false);
            userResultsTable.getColumnModel().getColumn(1).setResizable(false);
            userResultsTable.getColumnModel().getColumn(2).setResizable(false);
            userResultsTable.getColumnModel().getColumn(3).setResizable(false);
            userResultsTable.getColumnModel().getColumn(4).setResizable(false);
            userResultsTable.getColumnModel().getColumn(5).setResizable(false);
        }

        searchAgainButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        searchAgainButton.setText("Search Again");
        searchAgainButton.setMaximumSize(new java.awt.Dimension(175, 45));
        searchAgainButton.setMinimumSize(new java.awt.Dimension(175, 45));
        searchAgainButton.setPreferredSize(new java.awt.Dimension(175, 45));
        searchAgainButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchAgainButtonActionPerformed(evt);
            }
        });

        deleteButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        deleteButton.setText("Delete");
        deleteButton.setMaximumSize(new java.awt.Dimension(130, 45));
        deleteButton.setMinimumSize(new java.awt.Dimension(130, 45));
        deleteButton.setPreferredSize(new java.awt.Dimension(130, 45));
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        changeRoleButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        changeRoleButton.setText("Change role");
        changeRoleButton.setMaximumSize(new java.awt.Dimension(165, 45));
        changeRoleButton.setMinimumSize(new java.awt.Dimension(165, 45));
        changeRoleButton.setPreferredSize(new java.awt.Dimension(165, 45));
        changeRoleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeRoleButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout userResultsPageLayout = new javax.swing.GroupLayout(userResultsPage);
        userResultsPage.setLayout(userResultsPageLayout);
        userResultsPageLayout.setHorizontalGroup(
            userResultsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, userResultsPageLayout.createSequentialGroup()
                .addContainerGap(75, Short.MAX_VALUE)
                .addGroup(userResultsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(userResultsPageLayout.createSequentialGroup()
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(changeRoleButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(searchAgainButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(75, 75, 75))
        );
        userResultsPageLayout.setVerticalGroup(
            userResultsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userResultsPageLayout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addGroup(userResultsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(changeRoleButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(searchAgainButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(106, 106, 106))
        );

        cardPanel1.add(userResultsPage, "userResults");

        createUserPage.setBackground(new java.awt.Color(61, 96, 146));
        createUserPage.setMaximumSize(new java.awt.Dimension(900, 640));
        createUserPage.setMinimumSize(new java.awt.Dimension(900, 640));

        newUserLabel.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        newUserLabel.setForeground(new java.awt.Color(255, 255, 255));
        newUserLabel.setText("New User");

        userLastNameField.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        userLastNameField.setMaximumSize(new java.awt.Dimension(250, 42));
        userLastNameField.setMinimumSize(new java.awt.Dimension(250, 42));
        userLastNameField.setPreferredSize(new java.awt.Dimension(250, 42));

        userFirstNameField.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        userFirstNameField.setMaximumSize(new java.awt.Dimension(250, 42));
        userFirstNameField.setMinimumSize(new java.awt.Dimension(250, 42));
        userFirstNameField.setPreferredSize(new java.awt.Dimension(250, 42));
        userFirstNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userFirstNameFieldActionPerformed(evt);
            }
        });

        NewRepeatPasswordField.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        NewRepeatPasswordField.setMaximumSize(new java.awt.Dimension(250, 42));
        NewRepeatPasswordField.setMinimumSize(new java.awt.Dimension(250, 42));
        NewRepeatPasswordField.setPreferredSize(new java.awt.Dimension(250, 42));
        NewRepeatPasswordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewRepeatPasswordFieldActionPerformed(evt);
            }
        });

        NewPasswordField.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        NewPasswordField.setMaximumSize(new java.awt.Dimension(250, 42));
        NewPasswordField.setMinimumSize(new java.awt.Dimension(250, 42));
        NewPasswordField.setPreferredSize(new java.awt.Dimension(250, 42));
        NewPasswordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewPasswordFieldActionPerformed(evt);
            }
        });

        userRoleComboBox.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        userRoleComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Technician", "Shift Manager", "Office Manager", "Receptionist", " " }));
        userRoleComboBox.setMaximumSize(new java.awt.Dimension(250, 42));
        userRoleComboBox.setMinimumSize(new java.awt.Dimension(250, 42));
        userRoleComboBox.setPreferredSize(new java.awt.Dimension(250, 42));
        userRoleComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userRoleComboBoxActionPerformed(evt);
            }
        });

        firstnameLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        firstnameLabel.setForeground(new java.awt.Color(255, 255, 255));
        firstnameLabel.setText("Firstname:");

        lastnameLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lastnameLabel.setForeground(new java.awt.Color(255, 255, 255));
        lastnameLabel.setText("Lastname:");

        RoleLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        RoleLabel.setForeground(new java.awt.Color(255, 255, 255));
        RoleLabel.setText("Role:");

        passwordLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        passwordLabel.setForeground(new java.awt.Color(255, 255, 255));
        passwordLabel.setText("Password:");

        ReenterPasswordLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        ReenterPasswordLabel.setForeground(new java.awt.Color(255, 255, 255));
        ReenterPasswordLabel.setText("Reenter password:");

        createUserButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        createUserButton.setText("Create User");
        createUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createUserButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout createUserPageLayout = new javax.swing.GroupLayout(createUserPage);
        createUserPage.setLayout(createUserPageLayout);
        createUserPageLayout.setHorizontalGroup(
            createUserPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createUserPageLayout.createSequentialGroup()
                .addGap(204, 204, 204)
                .addGroup(createUserPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lastnameLabel)
                    .addComponent(RoleLabel)
                    .addComponent(passwordLabel)
                    .addComponent(ReenterPasswordLabel)
                    .addComponent(firstnameLabel))
                .addGap(18, 18, 18)
                .addGroup(createUserPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(userRoleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userFirstNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userLastNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NewPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NewRepeatPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(204, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createUserPageLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(createUserPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createUserPageLayout.createSequentialGroup()
                        .addComponent(createUserButton)
                        .addGap(50, 50, 50))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createUserPageLayout.createSequentialGroup()
                        .addComponent(newUserLabel)
                        .addGap(362, 362, 362))))
        );
        createUserPageLayout.setVerticalGroup(
            createUserPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createUserPageLayout.createSequentialGroup()
                .addContainerGap(84, Short.MAX_VALUE)
                .addComponent(newUserLabel)
                .addGap(18, 18, 18)
                .addGroup(createUserPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userFirstNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(firstnameLabel))
                .addGap(25, 25, 25)
                .addGroup(createUserPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userLastNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastnameLabel))
                .addGap(25, 25, 25)
                .addGroup(createUserPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userRoleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RoleLabel))
                .addGap(25, 25, 25)
                .addGroup(createUserPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NewPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordLabel))
                .addGap(25, 25, 25)
                .addGroup(createUserPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NewRepeatPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ReenterPasswordLabel))
                .addGap(59, 59, 59)
                .addComponent(createUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80))
        );

        cardPanel1.add(createUserPage, "createUser");

        officeManagerHomePage.setMaximumSize(new java.awt.Dimension(900, 640));
        officeManagerHomePage.setMinimumSize(new java.awt.Dimension(900, 640));
        officeManagerHomePage.setPreferredSize(new java.awt.Dimension(900, 640));

        officeManagerPage.setBackground(new java.awt.Color(61, 96, 146));
        officeManagerPage.setMaximumSize(new java.awt.Dimension(900, 640));
        officeManagerPage.setMinimumSize(new java.awt.Dimension(900, 640));

        jobOfficeManager.setText("Job");

        standardJobsOfficeManager.setText("Standard Jobs");

        acceptPaymentOfficeManager.setText("Accept Payment");
        acceptPaymentOfficeManager.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptPaymentOfficeManagerActionPerformed(evt);
            }
        });

        tasksOfficeManager.setText("Tasks");
        tasksOfficeManager.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tasksOfficeManagerActionPerformed(evt);
            }
        });

        reportsOfficeManager.setText("Reports");

        usersOfficeManager.setText("Users");

        manageCustomersOfficeManager.setText("Manage Customers");

        settingsOfficeManager.setText("Settings");

        javax.swing.GroupLayout officeManagerPageLayout = new javax.swing.GroupLayout(officeManagerPage);
        officeManagerPage.setLayout(officeManagerPageLayout);
        officeManagerPageLayout.setHorizontalGroup(
            officeManagerPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(officeManagerPageLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(officeManagerPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jobOfficeManager, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reportsOfficeManager, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(officeManagerPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(officeManagerPageLayout.createSequentialGroup()
                        .addComponent(acceptPaymentOfficeManager, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tasksOfficeManager, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(standardJobsOfficeManager, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(officeManagerPageLayout.createSequentialGroup()
                        .addComponent(usersOfficeManager, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(manageCustomersOfficeManager, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(settingsOfficeManager, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24))
        );
        officeManagerPageLayout.setVerticalGroup(
            officeManagerPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(officeManagerPageLayout.createSequentialGroup()
                .addGap(127, 127, 127)
                .addGroup(officeManagerPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jobOfficeManager, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(acceptPaymentOfficeManager, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tasksOfficeManager, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(standardJobsOfficeManager, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(97, 97, 97)
                .addGroup(officeManagerPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reportsOfficeManager, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usersOfficeManager, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(manageCustomersOfficeManager, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(settingsOfficeManager, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(158, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout officeManagerHomePageLayout = new javax.swing.GroupLayout(officeManagerHomePage);
        officeManagerHomePage.setLayout(officeManagerHomePageLayout);
        officeManagerHomePageLayout.setHorizontalGroup(
            officeManagerHomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, officeManagerHomePageLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(officeManagerPage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        officeManagerHomePageLayout.setVerticalGroup(
            officeManagerHomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(officeManagerHomePageLayout.createSequentialGroup()
                .addComponent(officeManagerPage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        cardPanel1.add(officeManagerHomePage, "officeManagerHomePage");

        shiftManagerHomePage.setMaximumSize(new java.awt.Dimension(900, 640));
        shiftManagerHomePage.setMinimumSize(new java.awt.Dimension(900, 640));
        shiftManagerHomePage.setPreferredSize(new java.awt.Dimension(900, 640));

        shiftManagerPage.setBackground(new java.awt.Color(61, 96, 146));
        shiftManagerPage.setMaximumSize(new java.awt.Dimension(900, 640));
        shiftManagerPage.setMinimumSize(new java.awt.Dimension(900, 640));

        jobShiftManager.setText("Job");

        standardJobsShiftManager.setText("Standard Jobs");

        acceptPaymentShiftManager.setText("Accept Payment");
        acceptPaymentShiftManager.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptPaymentShiftManagerActionPerformed(evt);
            }
        });

        tasksShiftManager.setText("Tasks");

        reportsShiftManager.setText("Reports");

        settingsShiftManager.setText("Settings");

        javax.swing.GroupLayout shiftManagerPageLayout = new javax.swing.GroupLayout(shiftManagerPage);
        shiftManagerPage.setLayout(shiftManagerPageLayout);
        shiftManagerPageLayout.setHorizontalGroup(
            shiftManagerPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(shiftManagerPageLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(shiftManagerPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(standardJobsShiftManager, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jobShiftManager, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(82, 82, 82)
                .addGroup(shiftManagerPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(reportsShiftManager, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(acceptPaymentShiftManager, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)
                .addGroup(shiftManagerPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tasksShiftManager, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(settingsShiftManager, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(80, 80, 80))
        );
        shiftManagerPageLayout.setVerticalGroup(
            shiftManagerPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(shiftManagerPageLayout.createSequentialGroup()
                .addGap(127, 127, 127)
                .addGroup(shiftManagerPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jobShiftManager, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(acceptPaymentShiftManager, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tasksShiftManager, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(92, 92, 92)
                .addGroup(shiftManagerPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reportsShiftManager, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(standardJobsShiftManager, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(settingsShiftManager, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(163, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout shiftManagerHomePageLayout = new javax.swing.GroupLayout(shiftManagerHomePage);
        shiftManagerHomePage.setLayout(shiftManagerHomePageLayout);
        shiftManagerHomePageLayout.setHorizontalGroup(
            shiftManagerHomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, shiftManagerHomePageLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(shiftManagerPage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        shiftManagerHomePageLayout.setVerticalGroup(
            shiftManagerHomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(shiftManagerHomePageLayout.createSequentialGroup()
                .addComponent(shiftManagerPage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        cardPanel1.add(shiftManagerHomePage, "shiftManagerHomePage");

        technicianHomePage.setMaximumSize(new java.awt.Dimension(900, 640));
        technicianHomePage.setMinimumSize(new java.awt.Dimension(900, 640));
        technicianHomePage.setPreferredSize(new java.awt.Dimension(900, 640));

        technicianPage.setBackground(new java.awt.Color(61, 96, 146));
        technicianPage.setMaximumSize(new java.awt.Dimension(900, 640));
        technicianPage.setMinimumSize(new java.awt.Dimension(900, 640));

        jobEnquiryTechnician.setText("Job Enquiry");
        jobEnquiryTechnician.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jobEnquiryTechnicianActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout technicianPageLayout = new javax.swing.GroupLayout(technicianPage);
        technicianPage.setLayout(technicianPageLayout);
        technicianPageLayout.setHorizontalGroup(
            technicianPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(technicianPageLayout.createSequentialGroup()
                .addGap(343, 343, 343)
                .addComponent(jobEnquiryTechnician, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(361, Short.MAX_VALUE))
        );
        technicianPageLayout.setVerticalGroup(
            technicianPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(technicianPageLayout.createSequentialGroup()
                .addGap(215, 215, 215)
                .addComponent(jobEnquiryTechnician, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(299, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout technicianHomePageLayout = new javax.swing.GroupLayout(technicianHomePage);
        technicianHomePage.setLayout(technicianHomePageLayout);
        technicianHomePageLayout.setHorizontalGroup(
            technicianHomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, technicianHomePageLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(technicianPage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        technicianHomePageLayout.setVerticalGroup(
            technicianHomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(technicianHomePageLayout.createSequentialGroup()
                .addComponent(technicianPage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        cardPanel1.add(technicianHomePage, "technicianHomePage");

        receptionistHomePage.setMaximumSize(new java.awt.Dimension(900, 640));
        receptionistHomePage.setMinimumSize(new java.awt.Dimension(900, 640));
        receptionistHomePage.setPreferredSize(new java.awt.Dimension(900, 640));

        receptionHomePage.setBackground(new java.awt.Color(61, 96, 146));
        receptionHomePage.setMaximumSize(new java.awt.Dimension(900, 640));
        receptionHomePage.setMinimumSize(new java.awt.Dimension(900, 640));

        jobReceptionist.setText("Job");

        acceptPaymentReceptionist.setText("Accept Payment");
        acceptPaymentReceptionist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptPaymentReceptionistActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout receptionHomePageLayout = new javax.swing.GroupLayout(receptionHomePage);
        receptionHomePage.setLayout(receptionHomePageLayout);
        receptionHomePageLayout.setHorizontalGroup(
            receptionHomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(receptionHomePageLayout.createSequentialGroup()
                .addGap(177, 177, 177)
                .addComponent(jobReceptionist, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72)
                .addComponent(acceptPaymentReceptionist, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(259, Short.MAX_VALUE))
        );
        receptionHomePageLayout.setVerticalGroup(
            receptionHomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(receptionHomePageLayout.createSequentialGroup()
                .addGap(231, 231, 231)
                .addGroup(receptionHomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jobReceptionist, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(acceptPaymentReceptionist, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(283, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout receptionistHomePageLayout = new javax.swing.GroupLayout(receptionistHomePage);
        receptionistHomePage.setLayout(receptionistHomePageLayout);
        receptionistHomePageLayout.setHorizontalGroup(
            receptionistHomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, receptionistHomePageLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(receptionHomePage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        receptionistHomePageLayout.setVerticalGroup(
            receptionistHomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(receptionistHomePageLayout.createSequentialGroup()
                .addComponent(receptionHomePage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        cardPanel1.add(receptionistHomePage, "receptionistHomePage");

        createTaskPage.setBackground(new java.awt.Color(61, 96, 146));
        createTaskPage.setMaximumSize(new java.awt.Dimension(900, 640));
        createTaskPage.setMinimumSize(new java.awt.Dimension(900, 640));

        newTaskLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        newTaskLabel1.setForeground(new java.awt.Color(255, 255, 255));
        newTaskLabel1.setText("New Task");

        descriptionNewTaskField.setMaximumSize(new java.awt.Dimension(250, 42));
        descriptionNewTaskField.setMinimumSize(new java.awt.Dimension(250, 42));
        descriptionNewTaskField.setPreferredSize(new java.awt.Dimension(250, 42));

        durationNewTaskDD.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24"}));
        durationNewTaskDD.setMaximumSize(new java.awt.Dimension(250, 42));
        durationNewTaskDD.setMinimumSize(new java.awt.Dimension(250, 42));
        durationNewTaskDD.setPreferredSize(new java.awt.Dimension(250, 42));
        durationNewTaskDD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                durationNewTaskDDActionPerformed(evt);
            }
        });

        descriptionLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        descriptionLabel.setForeground(new java.awt.Color(255, 255, 255));
        descriptionLabel.setText("Description:");

        durationLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        durationLabel.setForeground(new java.awt.Color(255, 255, 255));
        durationLabel.setText("Duration:");

        priceLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        priceLabel.setForeground(new java.awt.Color(255, 255, 255));
        priceLabel.setText("Price:");

        departmentNewTaskLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        departmentNewTaskLabel.setForeground(new java.awt.Color(255, 255, 255));
        departmentNewTaskLabel.setText("Department:");

        shelfSlotNewTaskLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        shelfSlotNewTaskLabel.setForeground(new java.awt.Color(255, 255, 255));
        shelfSlotNewTaskLabel.setText("Shelf slot:");

        createNewTaskButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        createNewTaskButton.setText("Create ");
        createNewTaskButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createNewTaskButtonActionPerformed(evt);
            }
        });

        cancelButtonCreateTask.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        cancelButtonCreateTask.setText("Cancel");
        cancelButtonCreateTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonCreateTaskActionPerformed(evt);
            }
        });

        shelfSlotTaskDD.setModel(new javax.swing.DefaultComboBoxModel<>(controller.getShelfSlots()));
        shelfSlotTaskDD.setMaximumSize(new java.awt.Dimension(250, 42));
        shelfSlotTaskDD.setMinimumSize(new java.awt.Dimension(250, 42));
        shelfSlotTaskDD.setPreferredSize(new java.awt.Dimension(250, 42));
        shelfSlotTaskDD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shelfSlotTaskDDActionPerformed(evt);
            }
        });

        departmentNewTaskDD.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Copy room","Dark room","Development area", "Printing room", "Finishing room", "Packaging department"}));
        departmentNewTaskDD.setMaximumSize(new java.awt.Dimension(250, 42));
        departmentNewTaskDD.setMinimumSize(new java.awt.Dimension(250, 42));
        departmentNewTaskDD.setPreferredSize(new java.awt.Dimension(250, 42));
        departmentNewTaskDD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departmentNewTaskDDActionPerformed(evt);
            }
        });

        durationNewTaskMinsDD.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"0","15","30","45"}));
        durationNewTaskMinsDD.setMaximumSize(new java.awt.Dimension(250, 42));
        durationNewTaskMinsDD.setMinimumSize(new java.awt.Dimension(250, 42));
        durationNewTaskMinsDD.setPreferredSize(new java.awt.Dimension(250, 42));
        durationNewTaskMinsDD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                durationNewTaskMinsDDActionPerformed(evt);
            }
        });

        priceNewTaskField.setMaximumSize(new java.awt.Dimension(250, 42));
        priceNewTaskField.setMinimumSize(new java.awt.Dimension(250, 42));
        priceNewTaskField.setPreferredSize(new java.awt.Dimension(250, 42));

        hoursLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        hoursLabel.setForeground(new java.awt.Color(255, 255, 255));
        hoursLabel.setText("hrs");

        minutesLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        minutesLabel.setForeground(new java.awt.Color(255, 255, 255));
        minutesLabel.setText("mins");

        javax.swing.GroupLayout createTaskPageLayout = new javax.swing.GroupLayout(createTaskPage);
        createTaskPage.setLayout(createTaskPageLayout);
        createTaskPageLayout.setHorizontalGroup(
            createTaskPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createTaskPageLayout.createSequentialGroup()
                .addGap(204, 204, 204)
                .addGroup(createTaskPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(descriptionLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(durationLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(priceLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(departmentNewTaskLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(shelfSlotNewTaskLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(createTaskPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(descriptionNewTaskField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(shelfSlotTaskDD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(departmentNewTaskDD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(createTaskPageLayout.createSequentialGroup()
                        .addComponent(durationNewTaskDD, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(hoursLabel)
                        .addGap(18, 18, 18)
                        .addComponent(durationNewTaskMinsDD, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(minutesLabel))
                    .addComponent(priceNewTaskField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(134, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createTaskPageLayout.createSequentialGroup()
                .addContainerGap(361, Short.MAX_VALUE)
                .addGroup(createTaskPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createTaskPageLayout.createSequentialGroup()
                        .addComponent(newTaskLabel1)
                        .addGap(362, 362, 362))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createTaskPageLayout.createSequentialGroup()
                        .addComponent(cancelButtonCreateTask)
                        .addGap(35, 35, 35)
                        .addComponent(createNewTaskButton)
                        .addGap(50, 50, 50))))
        );
        createTaskPageLayout.setVerticalGroup(
            createTaskPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createTaskPageLayout.createSequentialGroup()
                .addContainerGap(84, Short.MAX_VALUE)
                .addComponent(newTaskLabel1)
                .addGap(18, 18, 18)
                .addGroup(createTaskPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(descriptionNewTaskField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(descriptionLabel))
                .addGap(26, 26, 26)
                .addGroup(createTaskPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(durationLabel)
                    .addComponent(durationNewTaskDD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(durationNewTaskMinsDD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hoursLabel)
                    .addComponent(minutesLabel))
                .addGap(23, 23, 23)
                .addGroup(createTaskPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(priceLabel)
                    .addComponent(priceNewTaskField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(createTaskPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(departmentNewTaskLabel)
                    .addComponent(departmentNewTaskDD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(createTaskPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(shelfSlotNewTaskLabel)
                    .addComponent(shelfSlotTaskDD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58)
                .addGroup(createTaskPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(cancelButtonCreateTask, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(createNewTaskButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(80, 80, 80))
        );

        cardPanel1.add(createTaskPage, "createNewTask");

        cardPanel2.setBackground(new java.awt.Color(204, 255, 204));
        cardPanel2.setMaximumSize(new java.awt.Dimension(900, 60));
        cardPanel2.setPreferredSize(new java.awt.Dimension(900, 60));
        cardPanel2.setLayout(new java.awt.CardLayout());

        welcomeBar.setBackground(new java.awt.Color(33, 53, 80));
        welcomeBar.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        backButton.setBackground(new java.awt.Color(40, 64, 97));
        backButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        backButton.setForeground(new java.awt.Color(255, 255, 255));
        backButton.setText("Back");
        backButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        backButton.setOpaque(true);
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        welcomePageLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        welcomePageLabel.setForeground(new java.awt.Color(255, 255, 255));
        welcomePageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout welcomeBarLayout = new javax.swing.GroupLayout(welcomeBar);
        welcomeBar.setLayout(welcomeBarLayout);
        welcomeBarLayout.setHorizontalGroup(
            welcomeBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(welcomeBarLayout.createSequentialGroup()
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 321, Short.MAX_VALUE)
                .addComponent(welcomePageLabel)
                .addContainerGap(472, Short.MAX_VALUE))
        );
        welcomeBarLayout.setVerticalGroup(
            welcomeBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(welcomeBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(backButton, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
                .addComponent(welcomePageLabel))
        );

        cardPanel2.add(welcomeBar, "welcomeBar");

        homeBar.setBackground(new java.awt.Color(33, 53, 80));
        homeBar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        homeBar.setMaximumSize(new java.awt.Dimension(900, 60));
        homeBar.setMinimumSize(new java.awt.Dimension(900, 60));

        homeButton.setBackground(new java.awt.Color(40, 64, 97));
        homeButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        homeButton.setForeground(new java.awt.Color(255, 255, 255));
        homeButton.setText("Home");
        homeButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        homeButton.setMaximumSize(new java.awt.Dimension(103, 56));
        homeButton.setMinimumSize(new java.awt.Dimension(103, 56));
        homeButton.setOpaque(true);
        homeButton.setPreferredSize(new java.awt.Dimension(103, 56));
        homeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeButtonActionPerformed(evt);
            }
        });

        logOutButton.setBackground(new java.awt.Color(40, 64, 97));
        logOutButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        logOutButton.setForeground(new java.awt.Color(255, 255, 255));
        logOutButton.setText("Log out");
        logOutButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        logOutButton.setMaximumSize(new java.awt.Dimension(103, 56));
        logOutButton.setMinimumSize(new java.awt.Dimension(103, 56));
        logOutButton.setOpaque(true);
        logOutButton.setPreferredSize(new java.awt.Dimension(103, 56));
        logOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutButtonActionPerformed(evt);
            }
        });

        pageLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        pageLabel.setForeground(new java.awt.Color(255, 255, 255));
        pageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout homeBarLayout = new javax.swing.GroupLayout(homeBar);
        homeBar.setLayout(homeBarLayout);
        homeBarLayout.setHorizontalGroup(
            homeBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homeBarLayout.createSequentialGroup()
                .addComponent(homeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 345, Short.MAX_VALUE)
                .addComponent(pageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 345, Short.MAX_VALUE)
                .addComponent(logOutButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        homeBarLayout.setVerticalGroup(
            homeBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homeBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(homeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(logOutButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(pageLabel))
        );

        cardPanel2.add(homeBar, "homeBar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cardPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(cardPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(cardPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(cardPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(900, 700));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        // TODO add your handling code here:
        String role = null;
        String userID = userIDField.getText();
        String password = passwordField.getText();

        //Check fields are not empty
        if (userID.equals("") || password.equals("")) {
            JOptionPane.showMessageDialog(null, "Please insert data");
        } else {
            role = controller.login(userID, password);
        }

        switch (role) {
            case "Office Manager":
                System.out.println("Office Manager");
                card1.show(cardPanel1, "officeManagerHomePage");
                card2.show(cardPanel2, "homeBar");
                pageLabel.setText("User search page");
                break;
            case "Shift Manager":
                System.out.println("Shift Manager");
                break;
            case "Technician":
                System.out.println("Technician");
                break;
            case "Receptionist":
                System.out.println("Receptionist");
                break;
            default:
                JOptionPane.showMessageDialog(null, "Invalid User details");
        }
    }//GEN-LAST:event_loginButtonActionPerformed

    private void loginPageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginPageButtonActionPerformed
        // TODO add your handling code here:
        card1.show(cardPanel1, "login");
        backButton.setVisible(true);
        welcomePageLabel.setVisible(true);
        welcomePageLabel.setText("Login page");
    }//GEN-LAST:event_loginPageButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        card1.show(cardPanel1, "welcome");
        backButton.setVisible(false);
        welcomePageLabel.setVisible(false);
    }//GEN-LAST:event_backButtonActionPerformed

    private void RestorePageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RestorePageButtonActionPerformed
        // TODO add your handling code here:
        card1.show(cardPanel1, "restore");
        backButton.setVisible(true);
        welcomePageLabel.setVisible(true);
        welcomePageLabel.setText("Restore page");
    }//GEN-LAST:event_RestorePageButtonActionPerformed

    private void RestoreButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RestoreButtonActionPerformed
        // TODO add your handling code here:
        String[] restoreCmd = new String[]{"C:/Program Files/MySQL/MySQL Server 5.7/bin/mysql.exe", "--user=root", "--password=password", "-e", "source " + fileChosenField.getText()};

        if (fileChosenField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please select a file");
        } else {
            try {
                Runtime runtime = Runtime.getRuntime();
                //Process p = runtime.exec("C:/Program Files/MySQL/MySQL Server 5.7/bin/mysql.exe -uroot -ppassword bapers_data < \"" + fileChosenField.getText() + "\"");
                Process p = runtime.exec(restoreCmd);

                int processComplete = p.waitFor();
                if (processComplete == 0) {
                    JOptionPane.showMessageDialog(this, "Restore done");
                    fileChosenField.setText(null);
                    backButton.doClick();
                } else {
                    JOptionPane.showMessageDialog(this, "Restore failed");
                }
            } catch (Exception ex) {
                System.out.println(ex);
            }
        }
    }//GEN-LAST:event_RestoreButtonActionPerformed

    private void chooseFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseFileButtonActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.setFileFilter(new FileNameExtensionFilter("sql file", "sql"));
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        chooser.showOpenDialog(this);

        try {
            String directory = chooser.getSelectedFile().getPath();
            directory = directory.replace('\\', '/');
            fileChosenField.setText(directory);
        } catch (Exception ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_chooseFileButtonActionPerformed

    private void homeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_homeButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        card1.show(cardPanel1, "backup");
        card2.show(cardPanel2, "homeBar");
        pageLabel.setText("Backup page");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void logOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutButtonActionPerformed
        // TODO add your handling code here:
        card1.show(cardPanel1, "welcome");
        card2.show(cardPanel2, "welcomeBar");
    }//GEN-LAST:event_logOutButtonActionPerformed

    private void backupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backupButtonActionPerformed
        // TODO add your handling code here:
        if (locationChosenField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please select a directory");
        } else {
            try {
                Runtime runtime = Runtime.getRuntime();
                String date = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss").format(Calendar.getInstance().getTime());
                date = date.replace(' ', '_');
                date = date.replace(':', '-');
                String filename = "BAPERS_" + date + ".sql";
                Process p = runtime.exec("C:/Program Files/MySQL/MySQL Server 5.7/bin/mysqldump.exe -uroot -ppassword -B bapers_data -r \"" + locationChosenField.getText() + "\\" + filename + "\"");

                int processComplete = p.waitFor();
                if (processComplete == 0) {
                    JOptionPane.showMessageDialog(this, "Backup '" + filename + "' created");
                    locationChosenField.setText(null);
                    logOutButton.doClick();
                } else {
                    JOptionPane.showMessageDialog(this, "Backup failed");
                }
            } catch (Exception ex) {
                System.out.println(ex);
            }
        }

    }//GEN-LAST:event_backupButtonActionPerformed

    private void chooseLocationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseLocationButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.showOpenDialog(this);

        try {
            String directory = chooser.getSelectedFile().getPath();
            directory = directory.replace('\\', '/');
            locationChosenField.setText(directory);
        } catch (Exception ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_chooseLocationButtonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        card1.show(cardPanel1, "userSearch");
        card2.show(cardPanel2, "homeBar");
        pageLabel.setText("User search page");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void searchUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchUserButtonActionPerformed
        // TODO add your handling code here:
        String userNumber = UserNumberField.getText();
        String firstName = UserFirstnameField.getText();
        String lastName = UserLastnameField.getText();
        boolean valid = true;

        //regex needs to be recapped
        if (!userNumber.isEmpty()) {
            if (!Pattern.matches("(\\d)+", userNumber)) {
                JOptionPane.showMessageDialog(this, "User number: Numbers only");
                valid = false;
            } else if (userNumber.length() > 5) {
                JOptionPane.showMessageDialog(this, "User number: Cannot be longer than five digits");
                valid = false;
            }
        }
        if (!firstName.isEmpty()) {
            if (!Pattern.matches("(\\D)+", firstName)) {
                JOptionPane.showMessageDialog(this, "User firstname: letters only");
                valid = false;
            } else if (firstName.length() > 35) {
                JOptionPane.showMessageDialog(this, "User firstname: Cannot be longer than 35 characters");
                valid = false;
            }
        }
        if (!lastName.isEmpty()) {
            if (!Pattern.matches("(\\D)+", lastName)) {
                JOptionPane.showMessageDialog(this, "User lastname: letters only");
                valid = false;
            } else if (lastName.length() > 35) {
                JOptionPane.showMessageDialog(this, "User lastname: Cannot be longer than 35 characters");
                valid = false;
            }
        }

        if (valid) {
            ArrayList<UserDetails> users = controller.findUser(userNumber, firstName, lastName, (String) UserRoleSearchDrop.getSelectedItem());

            tblModel = (DefaultTableModel) userResultsTable.getModel();
            Object[] row = new Object[6];
            for (int i = 0; i < users.size(); i++) {
                row[0] = users.get(i).getAccount_no();
                row[1] = users.get(i).getFirstname();
                row[2] = users.get(i).getLastname();
                row[3] = users.get(i).getRole_id();
                row[4] = users.get(i).getDatetime();
                row[5] = "hello";
                tblModel.insertRow(i, row);
            }
            card1.show(cardPanel1, "userResults");
            //card2.show(cardPanel2, "homeBar");
            pageLabel.setText("User results page");

            userResultsTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

            //WORK FROM HERE. MAKE RESULTS PAGE, AND POPULATE IT WITH THE ARRAYLIST ABOVE
        }

    }//GEN-LAST:event_searchUserButtonActionPerformed

    private void UserRoleSearchDropActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserRoleSearchDropActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UserRoleSearchDropActionPerformed

    private void changeRoleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeRoleButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = userResultsTable.getSelectedRow();
        if (selectedRow != -1) {
            String[] choices = {"Office Manager", "Shift Manager", "Receptionist", "Technician"};

            String selectedRole = (String) JOptionPane.showInputDialog(this, "Select a new role:", "Update user role", JOptionPane.QUESTION_MESSAGE, null, choices, choices[((int) userResultsTable.getValueAt(selectedRow, 3)) - 1]);
            if (selectedRole != null) {
                String outcome;
                int newRoleid = controller.getRoleID(selectedRole);
                if (controller.updateUserRole((int) userResultsTable.getValueAt(selectedRow, 0), newRoleid)) {
                    outcome = "Success";
                    tblModel.setValueAt(newRoleid, userResultsTable.getRowSorter().convertRowIndexToModel(userResultsTable.getSelectedRow()), 3);
                } else {
                    outcome = "Fail";
                }
                JOptionPane.showMessageDialog(this, outcome);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a row to update");
        }
    }//GEN-LAST:event_changeRoleButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = userResultsTable.getSelectedRow(); // index 0 here
        if (selectedRow != -1) {
            int userId = (int) userResultsTable.getValueAt(selectedRow, 0);
            int response = JOptionPane.showConfirmDialog(this, "Are you sure you would like to delete user with id " + userId + "?");

            if (response == 0) {
                String outcome;
                if (controller.deleteUser(userId)) {
                    outcome = "Success";
                    //we need the selected elements position relative to the model before the sort
                    tblModel.removeRow(userResultsTable.getRowSorter().convertRowIndexToModel(userResultsTable.getSelectedRow()));
                } else {
                    outcome = "Fail";
                }
                JOptionPane.showMessageDialog(this, outcome);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a row to delete");
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void searchAgainButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchAgainButtonActionPerformed
        // TODO add your handling code here:
        card1.show(cardPanel1, "userSearch");
        pageLabel.setText("User search page");
        tblModel.setRowCount(0);
    }//GEN-LAST:event_searchAgainButtonActionPerformed

    private void tempButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tempButtonActionPerformed
        // TODO add your handling code here:
        card1.show(cardPanel1, "createUser");
        card2.show(cardPanel2, "homeBar");
        pageLabel.setText("User create page");
    }//GEN-LAST:event_tempButtonActionPerformed

    private void userFirstNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userFirstNameFieldActionPerformed

    }//GEN-LAST:event_userFirstNameFieldActionPerformed

    private void NewRepeatPasswordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewRepeatPasswordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NewRepeatPasswordFieldActionPerformed

    private void NewPasswordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewPasswordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NewPasswordFieldActionPerformed

    private void userRoleComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userRoleComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userRoleComboBoxActionPerformed

    private void createUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createUserButtonActionPerformed
        boolean valid = true;
        //Initialise values
        String firstName = userFirstNameField.getText();
        String surname = userLastNameField.getText();
        String password = NewPasswordField.getText();
        String role = (String) userRoleComboBox.getSelectedItem();
        int roleID = 0;

        //Check first name field
        if (userFirstNameField.getText().length() > 10) {
            JOptionPane.showMessageDialog(null, "Name cannot be longer than 10 characters");
            valid = false;
        }

        //Check fields are not empty
        if (firstName.equals("") || surname.equals("") || password.equals("")) {
            valid = false;
            JOptionPane.showMessageDialog(null, "Please insert data");
        }

        //Check passwords match
        if (!NewPasswordField.getText().equals(NewRepeatPasswordField.getText())) {
            valid = false;
            JOptionPane.showMessageDialog(null, "Passwords do not match");
            //Insert pop up error
        }

        //Get RoleID
        roleID = controller.getRoleID(role);
        System.out.println(roleID);

        //Will only execute method in controller if all preconditions are met
        if (valid) {
            if (controller.createUser(firstName, surname, password, roleID)) {
                JOptionPane.showMessageDialog(null, "User created");
            } else {
                JOptionPane.showMessageDialog(null, "Failed to create user");
            }
        }

    }//GEN-LAST:event_createUserButtonActionPerformed

    private void homePageOMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homePageOMActionPerformed
        // TODO add your handling code here:
        card1.show(cardPanel1, "officeManagerHomePage");
        card2.show(cardPanel2, "homeBar");
        pageLabel.setText("Welcome!");
    }//GEN-LAST:event_homePageOMActionPerformed

    private void homePageSMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homePageSMActionPerformed
        // TODO add your handling code here:
        card1.show(cardPanel1, "shiftManagerHomePage");
        card2.show(cardPanel2, "homeBar");
        pageLabel.setText("Welcome!");
    }//GEN-LAST:event_homePageSMActionPerformed

    private void homePageTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homePageTActionPerformed
        // TODO add your handling code here:
        card1.show(cardPanel1, "technicianHomePage");
        card2.show(cardPanel2, "homeBar");
        pageLabel.setText("Welcome!");
    }//GEN-LAST:event_homePageTActionPerformed

    private void homePageRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homePageRActionPerformed
        // TODO add your handling code here:
        card1.show(cardPanel1, "receptionistHomePage");
        card2.show(cardPanel2, "homeBar");
        pageLabel.setText("Welcome!");
    }//GEN-LAST:event_homePageRActionPerformed

    private void acceptPaymentOfficeManagerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptPaymentOfficeManagerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_acceptPaymentOfficeManagerActionPerformed

    private void tasksOfficeManagerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tasksOfficeManagerActionPerformed
        // TODO add your handling code here:
        card1.show(cardPanel1, "createNewTask");
        card2.show(cardPanel2, "createNewTaskBar");
    }//GEN-LAST:event_tasksOfficeManagerActionPerformed

    private void acceptPaymentShiftManagerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptPaymentShiftManagerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_acceptPaymentShiftManagerActionPerformed

    private void jobEnquiryTechnicianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jobEnquiryTechnicianActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jobEnquiryTechnicianActionPerformed

    private void acceptPaymentReceptionistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptPaymentReceptionistActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_acceptPaymentReceptionistActionPerformed

    private void durationNewTaskDDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_durationNewTaskDDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_durationNewTaskDDActionPerformed

    private void createNewTaskButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createNewTaskButtonActionPerformed
        // TODO add your handling code here:

        boolean valid = true;
        //Initialise values to get the data from the GUI buttons
        String description = descriptionNewTaskField.getText();
        double price = Double.parseDouble(priceNewTaskField.getText());
        int duration_min = Integer.parseInt((String) durationNewTaskMinsDD.getSelectedItem());
        int duration_hours = Integer.parseInt((String) durationNewTaskDD.getSelectedItem());
        String Department_department_code = (String) departmentNewTaskDD.getSelectedItem();
        int shelf_slot = Integer.parseInt((String) shelfSlotTaskDD.getSelectedItem());

        duration_min += duration_hours * 60;

        //Check fields are not empty in the GUI, then pop up will show if no data is inserted
        if (description.equals("") || price == 0) {
            valid = false;
            JOptionPane.showMessageDialog(null, "Please insert data");
        } else {
            valid = true;
        }

        //Will only execute method in controller if all preconditions are met
        if (valid) {
            if (controller.createNewTask(description, duration_min, price, Department_department_code, shelf_slot)) {
                JOptionPane.showMessageDialog(null, "Task created");
            } else {
                JOptionPane.showMessageDialog(null, "Failed to create Task");
            }
        }
    }//GEN-LAST:event_createNewTaskButtonActionPerformed

    private void cancelButtonCreateTaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonCreateTaskActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cancelButtonCreateTaskActionPerformed

    private void shelfSlotTaskDDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shelfSlotTaskDDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_shelfSlotTaskDDActionPerformed

    private void departmentNewTaskDDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departmentNewTaskDDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_departmentNewTaskDDActionPerformed

    private void durationNewTaskMinsDDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_durationNewTaskMinsDDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_durationNewTaskMinsDDActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new MainFrame(controller).setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BAPERSLabel;
    private javax.swing.JLabel BackupDataLabel;
    private javax.swing.JPasswordField NewPasswordField;
    private javax.swing.JPasswordField NewRepeatPasswordField;
    private javax.swing.JLabel ReenterPasswordLabel;
    private javax.swing.JButton RestoreButton;
    private javax.swing.JButton RestorePageButton;
    private javax.swing.JLabel RoleLabel;
    private javax.swing.JTextField UserFirstnameField;
    private javax.swing.JTextField UserLastnameField;
    private javax.swing.JTextField UserNumberField;
    private javax.swing.JComboBox<String> UserRoleSearchDrop;
    private javax.swing.JButton acceptPaymentOfficeManager;
    private javax.swing.JButton acceptPaymentReceptionist;
    private javax.swing.JButton acceptPaymentShiftManager;
    private javax.swing.JButton backButton;
    private javax.swing.JButton backupButton;
    private javax.swing.JLabel backupDestinationLabel;
    private javax.swing.JPanel backupPage;
    private javax.swing.JButton cancelButtonCreateTask;
    private javax.swing.JPanel cardPanel1;
    private javax.swing.JPanel cardPanel2;
    private javax.swing.JButton changeRoleButton;
    private javax.swing.JButton chooseFileButton;
    private javax.swing.JButton chooseLocationButton;
    private javax.swing.JButton createNewTaskButton;
    private javax.swing.JPanel createTaskPage;
    private javax.swing.JButton createUserButton;
    private javax.swing.JPanel createUserPage;
    private javax.swing.JButton deleteButton;
    private javax.swing.JComboBox<String> departmentNewTaskDD;
    private javax.swing.JLabel departmentNewTaskLabel;
    private javax.swing.JLabel descriptionLabel;
    private javax.swing.JTextField descriptionNewTaskField;
    private javax.swing.JLabel durationLabel;
    private javax.swing.JComboBox<String> durationNewTaskDD;
    private javax.swing.JComboBox<String> durationNewTaskMinsDD;
    private javax.swing.JTextField fileChosenField;
    private javax.swing.JLabel findUserLabel;
    private javax.swing.JLabel firstnameLabel;
    private javax.swing.JPanel homeBar;
    private javax.swing.JButton homeButton;
    private javax.swing.JButton homePageOM;
    private javax.swing.JButton homePageR;
    private javax.swing.JButton homePageSM;
    private javax.swing.JButton homePageT;
    private javax.swing.JLabel hoursLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jobEnquiryTechnician;
    private javax.swing.JButton jobOfficeManager;
    private javax.swing.JButton jobReceptionist;
    private javax.swing.JButton jobShiftManager;
    private javax.swing.JLabel lastnameLabel;
    private javax.swing.JTextField locationChosenField;
    private javax.swing.JButton logOutButton;
    private javax.swing.JButton loginButton;
    private javax.swing.JLabel loginLabel;
    private javax.swing.JPanel loginPage;
    private javax.swing.JButton loginPageButton;
    private javax.swing.JButton manageCustomersOfficeManager;
    private javax.swing.JLabel minutesLabel;
    private javax.swing.JLabel newTaskLabel1;
    private javax.swing.JLabel newUserLabel;
    private javax.swing.JPanel officeManagerHomePage;
    private javax.swing.JPanel officeManagerPage;
    private javax.swing.JLabel pageLabel;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JLabel priceLabel;
    private javax.swing.JTextField priceNewTaskField;
    private javax.swing.JPanel receptionHomePage;
    private javax.swing.JPanel receptionistHomePage;
    private javax.swing.JButton reportsOfficeManager;
    private javax.swing.JButton reportsShiftManager;
    private javax.swing.JLabel restoreLabel;
    private javax.swing.JPanel restorePage;
    private javax.swing.JButton searchAgainButton;
    private javax.swing.JButton searchUserButton;
    private javax.swing.JButton settingsOfficeManager;
    private javax.swing.JButton settingsShiftManager;
    private javax.swing.JLabel shelfSlotNewTaskLabel;
    private javax.swing.JComboBox<String> shelfSlotTaskDD;
    private javax.swing.JPanel shiftManagerHomePage;
    private javax.swing.JPanel shiftManagerPage;
    private javax.swing.JButton standardJobsOfficeManager;
    private javax.swing.JButton standardJobsShiftManager;
    private javax.swing.JButton tasksOfficeManager;
    private javax.swing.JButton tasksShiftManager;
    private javax.swing.JPanel technicianHomePage;
    private javax.swing.JPanel technicianPage;
    private javax.swing.JButton tempButton;
    private javax.swing.JTextField userFirstNameField;
    private javax.swing.JLabel userFirstnameLabel;
    private javax.swing.JTextField userIDField;
    private javax.swing.JTextField userLastNameField;
    private javax.swing.JLabel userLastnameLabel;
    private javax.swing.JLabel userLastnameLabel1;
    private javax.swing.JLabel userNumberLabel;
    private javax.swing.JPanel userResultsPage;
    private javax.swing.JTable userResultsTable;
    private javax.swing.JComboBox<String> userRoleComboBox;
    private javax.swing.JPanel userSearchPage;
    private javax.swing.JButton usersOfficeManager;
    private javax.swing.JPanel welcomeBar;
    private javax.swing.JPanel welcomePage;
    private javax.swing.JLabel welcomePageLabel;
    // End of variables declaration//GEN-END:variables
}
