/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bapers.gui;

import bapers.controller.Controller;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import bapers.job.Task;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.pdf.PdfPTable;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author CameronE
 */
public class MainFrame extends javax.swing.JFrame {

    private CardLayout card1;
    private CardLayout card2;
    private Controller controller;

    /**
     * Creates new form MainFrame
     */
    public MainFrame(Controller controller) {
        this.controller = controller;
        initComponents();
        card1 = (CardLayout) cardPanel1.getLayout();
        card2 = (CardLayout) cardPanel2.getLayout();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cardPanel1 = new javax.swing.JPanel();
        welcomePage = new javax.swing.JPanel();
        BAPERSLabel = new javax.swing.JLabel();
        loginPageButton = new javax.swing.JButton();
        RestorePageButton = new javax.swing.JButton();
        tempButton = new javax.swing.JButton();
        homePageOM = new javax.swing.JButton();
        homePageSM = new javax.swing.JButton();
        homePageT = new javax.swing.JButton();
        homePageR = new javax.swing.JButton();
        jobSearchResultsPage = new javax.swing.JPanel();
        backButon = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jobSearchResultsTable = new javax.swing.JTable();
        collectJobButton = new javax.swing.JButton();
        jobEnquirySearchResultsPage = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jobEnquiryTableResults = new javax.swing.JTable();
        viewJobEnquiryButton = new javax.swing.JButton();
        backJobEnquiryButton = new javax.swing.JButton();
        jobEnquiryPage = new javax.swing.JPanel();
        jobStatusLabel = new javax.swing.JLabel();
        jobNumberText = new javax.swing.JTextField();
        searchJobNumberJobEnquiryButton = new javax.swing.JButton();
        jobNumberLabel1 = new javax.swing.JLabel();
        jobPriorityLabel = new javax.swing.JLabel();
        jobPriorityLabel2 = new javax.swing.JLabel();
        cancelJobEnquiryButton = new javax.swing.JButton();
        searchJobEnquiryButton = new javax.swing.JButton();
        jobStatusComboBox = new javax.swing.JComboBox<>();
        jobCollectedComboBox = new javax.swing.JComboBox<>();
        jobPriorityComboBox = new javax.swing.JComboBox<>();
        searchJobPage = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jobNumberTextField = new javax.swing.JTextField();
        searchJobButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        customerNumberText = new javax.swing.JTextField();
        searchCustomerButton = new javax.swing.JButton();
        backRecpHPButton = new javax.swing.JButton();
        taskSearchResultsJobEnquiryPage = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        standardJobCodeLabel = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        taskResultsTable = new javax.swing.JTable();
        updateTaskButton = new javax.swing.JButton();
        taskEnquiryBackButton = new javax.swing.JButton();
        standardJobIndexLabel = new javax.swing.JLabel();
        reminderLettersTablePage = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        reminderLettersTable = new javax.swing.JTable();
        backCustomerPageButton = new javax.swing.JButton();
        viewReminderLetterButton = new javax.swing.JButton();
        officeManagerCustomerPage = new javax.swing.JPanel();
        searchCustomerBtn = new javax.swing.JButton();
        reminderLettersButton = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        manageTasksPage = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        taskTable = new javax.swing.JTable();
        editButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        taskPage = new javax.swing.JPanel();
        manageTasksButton = new javax.swing.JButton();
        createTaskButton = new javax.swing.JButton();
        loginPage = new javax.swing.JPanel();
        loginLabel = new javax.swing.JLabel();
        loginButton = new javax.swing.JButton();
        passwordField = new javax.swing.JPasswordField();
        userIDField = new javax.swing.JTextField();
        restorePage = new javax.swing.JPanel();
        restoreLabel = new javax.swing.JLabel();
        RestoreButton = new javax.swing.JButton();
        chooseFileButton = new javax.swing.JButton();
        fileChosenField = new javax.swing.JTextField();
        createUserPage = new javax.swing.JPanel();
        newUserLabel = new javax.swing.JLabel();
        userLastNameField = new javax.swing.JTextField();
        userFirstNameField = new javax.swing.JTextField();
        NewRepeatPasswordField = new javax.swing.JPasswordField();
        NewPasswordField = new javax.swing.JPasswordField();
        userRoleDD = new javax.swing.JComboBox<>();
        firstnameLabel = new javax.swing.JLabel();
        lastnameLabel = new javax.swing.JLabel();
        RoleLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        ReenterPasswordLabel = new javax.swing.JLabel();
        createUserButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        officeManagerHomePage = new javax.swing.JPanel();
        officeManagerPage = new javax.swing.JPanel();
        jobOfficeManager = new javax.swing.JButton();
        standardJobsOfficeManager = new javax.swing.JButton();
        acceptPaymentOfficeManager = new javax.swing.JButton();
        tasksOfficeManager = new javax.swing.JButton();
        reportsOfficeManager = new javax.swing.JButton();
        usersOfficeManager = new javax.swing.JButton();
        manageCustomersOfficeManager = new javax.swing.JButton();
        settingsOfficeManager = new javax.swing.JButton();
        shiftManagerHomePage = new javax.swing.JPanel();
        shiftManagerPage = new javax.swing.JPanel();
        jobShiftManager = new javax.swing.JButton();
        standardJobsShiftManager = new javax.swing.JButton();
        acceptPaymentShiftManager = new javax.swing.JButton();
        tasksShiftManager = new javax.swing.JButton();
        reportsShiftManager = new javax.swing.JButton();
        settingsShiftManager = new javax.swing.JButton();
        technicianHomePage = new javax.swing.JPanel();
        technicianPage = new javax.swing.JPanel();
        jobEnquiryTechnician = new javax.swing.JButton();
        standardJobSearchResultsJobEnquiryPage = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        standardJobResults = new javax.swing.JTable();
        viewStandardJobButton = new javax.swing.JButton();
        backJobSearchResultsButton = new javax.swing.JButton();
        jobNumberLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jobIndexLabel = new javax.swing.JLabel();
        receptionistHomePage = new javax.swing.JPanel();
        receptionHomePage = new javax.swing.JPanel();
        jobReceptionist = new javax.swing.JButton();
        acceptPaymentReceptionist = new javax.swing.JButton();
        createTaskPage = new javax.swing.JPanel();
        newTaskLabel1 = new javax.swing.JLabel();
        descriptionNewTaskField = new javax.swing.JTextField();
        durationNewTaskDD = new javax.swing.JComboBox<>();
        descriptionLabel = new javax.swing.JLabel();
        durationLabel = new javax.swing.JLabel();
        priceLabel = new javax.swing.JLabel();
        departmentNewTaskLabel = new javax.swing.JLabel();
        shelfSlotNewTaskLabel = new javax.swing.JLabel();
        createNewTaskButton = new javax.swing.JButton();
        cancelButtonCreateTask = new javax.swing.JButton();
        shelfSlotTaskDD = new javax.swing.JComboBox<>();
        departmentNewTaskDD = new javax.swing.JComboBox<>();
        durationNewTaskMinsDD = new javax.swing.JComboBox<>();
        priceNewTaskField = new javax.swing.JTextField();
        hoursLabel = new javax.swing.JLabel();
        minutesLabel = new javax.swing.JLabel();
        editTaskPage = new javax.swing.JPanel();
        newDescriptionLabel = new javax.swing.JLabel();
        newDescriptionLabel1 = new javax.swing.JLabel();
        newDescriptionLabel2 = new javax.swing.JLabel();
        newDescriptionLabel3 = new javax.swing.JLabel();
        cancelBtn = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        descriptionText = new javax.swing.JTextField();
        shelfSlotText = new javax.swing.JTextField();
        priceText = new javax.swing.JTextField();
        departmentComboBox = new javax.swing.JComboBox<>();
        taskIDLabel = new javax.swing.JLabel();
        taskIDText = new javax.swing.JTextField();
        cardPanel2 = new javax.swing.JPanel();
        welcomeBar1 = new javax.swing.JPanel();
        welcomeBar2 = new javax.swing.JPanel();
        backButton = new javax.swing.JButton();
        homePageOMBar = new javax.swing.JPanel();
        welcomeBar3 = new javax.swing.JPanel();
        officeManagerText = new javax.swing.JLabel();
        officeManagerWelcomeText = new javax.swing.JLabel();
        logOutButton = new javax.swing.JButton();
        homePagesSMBar = new javax.swing.JPanel();
        welcomeBar4 = new javax.swing.JPanel();
        officeManagerText1 = new javax.swing.JLabel();
        officeManagerWelcomeText1 = new javax.swing.JLabel();
        logOutButton1 = new javax.swing.JButton();
        homePageTBar = new javax.swing.JPanel();
        homePageTechnician = new javax.swing.JPanel();
        officeManagerText2 = new javax.swing.JLabel();
        officeManagerWelcomeText2 = new javax.swing.JLabel();
        logOutButton2 = new javax.swing.JButton();
        homePageRBar = new javax.swing.JPanel();
        homePageReceptionist = new javax.swing.JPanel();
        officeManagerText3 = new javax.swing.JLabel();
        officeManagerWelcomeText3 = new javax.swing.JLabel();
        logOutButton3 = new javax.swing.JButton();
        createNewTaskBar = new javax.swing.JPanel();
        createNewTaskOM = new javax.swing.JPanel();
        homeButtonNewTask = new javax.swing.JLabel();
        createTaskHead = new javax.swing.JLabel();
        logOutButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(900, 700));
        setResizable(false);

        cardPanel1.setBackground(new java.awt.Color(255, 204, 204));
        cardPanel1.setPreferredSize(new java.awt.Dimension(900, 640));
        cardPanel1.setLayout(new java.awt.CardLayout());

        welcomePage.setBackground(new java.awt.Color(61, 96, 146));
        welcomePage.setMaximumSize(new java.awt.Dimension(900, 640));
        welcomePage.setMinimumSize(new java.awt.Dimension(900, 640));
        welcomePage.setPreferredSize(new java.awt.Dimension(900, 640));

        BAPERSLabel.setFont(new java.awt.Font("Tahoma", 1, 90)); // NOI18N
        BAPERSLabel.setForeground(new java.awt.Color(255, 255, 255));
        BAPERSLabel.setText("B   A   P   E   R   S");

        loginPageButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        loginPageButton.setText("Login");
        loginPageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginPageButtonActionPerformed(evt);
            }
        });

        RestorePageButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        RestorePageButton.setText("Restore");
        RestorePageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RestorePageButtonActionPerformed(evt);
            }
        });

        tempButton.setText("tempButton");
        tempButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tempButtonActionPerformed(evt);
            }
        });

        homePageOM.setText("homePageOM");
        homePageOM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homePageOMActionPerformed(evt);
            }
        });

        homePageSM.setText("homePageSM");
        homePageSM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homePageSMActionPerformed(evt);
            }
        });

        homePageT.setText("homePageT");
        homePageT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homePageTActionPerformed(evt);
            }
        });

        homePageR.setText("homePageR");
        homePageR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homePageRActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout welcomePageLayout = new javax.swing.GroupLayout(welcomePage);
        welcomePage.setLayout(welcomePageLayout);
        welcomePageLayout.setHorizontalGroup(
            welcomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(welcomePageLayout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(welcomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(BAPERSLabel)
                    .addComponent(loginPageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RestorePageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(75, 75, 75))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, welcomePageLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(welcomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(welcomePageLayout.createSequentialGroup()
                        .addComponent(homePageR)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(homePageT)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(homePageSM)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(homePageOM))
                    .addComponent(tempButton))
                .addGap(155, 155, 155))
        );
        welcomePageLayout.setVerticalGroup(
            welcomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(welcomePageLayout.createSequentialGroup()
                .addGap(132, 132, 132)
                .addComponent(BAPERSLabel)
                .addGap(119, 119, 119)
                .addComponent(loginPageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(RestorePageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addGroup(welcomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(homePageOM)
                    .addComponent(homePageSM)
                    .addComponent(homePageT)
                    .addComponent(homePageR))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tempButton)
                .addGap(37, 37, 37))
        );

        homePageOM.getAccessibleContext().setAccessibleParent(homePageOM);

        cardPanel1.add(welcomePage, "welcome");

        jobSearchResultsPage.setBackground(new java.awt.Color(61, 96, 146));

        backButon.setText("Back");
        backButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButonActionPerformed(evt);
            }
        });

        jobSearchResultsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Job no", "Issued by", "Deadline", "Status", "Collected"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jobSearchResultsTable);

        collectJobButton.setText("Collect");
        collectJobButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                collectJobButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jobSearchResultsPageLayout = new javax.swing.GroupLayout(jobSearchResultsPage);
        jobSearchResultsPage.setLayout(jobSearchResultsPageLayout);
        jobSearchResultsPageLayout.setHorizontalGroup(
            jobSearchResultsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jobSearchResultsPageLayout.createSequentialGroup()
                .addContainerGap(553, Short.MAX_VALUE)
                .addComponent(collectJobButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75)
                .addComponent(backButon, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
            .addGroup(jobSearchResultsPageLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 837, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jobSearchResultsPageLayout.setVerticalGroup(
            jobSearchResultsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jobSearchResultsPageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addGroup(jobSearchResultsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(backButon, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                    .addComponent(collectJobButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(90, 90, 90))
        );

        cardPanel1.add(jobSearchResultsPage, "jobSearchResultsPage");

        jobEnquirySearchResultsPage.setBackground(new java.awt.Color(61, 96, 146));

        jobEnquiryTableResults.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Job Number", "Issued By", "Date recorded", "Deadline", "Status"
            }
        ));
        jScrollPane3.setViewportView(jobEnquiryTableResults);

        viewJobEnquiryButton.setText("View");
        viewJobEnquiryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewJobEnquiryButtonActionPerformed(evt);
            }
        });

        backJobEnquiryButton.setText("Back");
        backJobEnquiryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJobEnquiryButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jobEnquirySearchResultsPageLayout = new javax.swing.GroupLayout(jobEnquirySearchResultsPage);
        jobEnquirySearchResultsPage.setLayout(jobEnquirySearchResultsPageLayout);
        jobEnquirySearchResultsPageLayout.setHorizontalGroup(
            jobEnquirySearchResultsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jobEnquirySearchResultsPageLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(jobEnquirySearchResultsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jobEnquirySearchResultsPageLayout.createSequentialGroup()
                        .addComponent(backJobEnquiryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(viewJobEnquiryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 781, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        jobEnquirySearchResultsPageLayout.setVerticalGroup(
            jobEnquirySearchResultsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jobEnquirySearchResultsPageLayout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jobEnquirySearchResultsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewJobEnquiryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backJobEnquiryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(72, Short.MAX_VALUE))
        );

        cardPanel1.add(jobEnquirySearchResultsPage, "jobEnquirySearchResultsPage");

        jobEnquiryPage.setBackground(new java.awt.Color(61, 96, 146));

        jobStatusLabel.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jobStatusLabel.setForeground(new java.awt.Color(255, 255, 255));
        jobStatusLabel.setText("Job Status: ");

        jobNumberText.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        searchJobNumberJobEnquiryButton.setText("Search");
        searchJobNumberJobEnquiryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchJobNumberJobEnquiryButtonActionPerformed(evt);
            }
        });

        jobNumberLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jobNumberLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jobNumberLabel1.setText("Job Number:");

        jobPriorityLabel.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jobPriorityLabel.setForeground(new java.awt.Color(255, 255, 255));
        jobPriorityLabel.setText("Job Priority:");

        jobPriorityLabel2.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jobPriorityLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jobPriorityLabel2.setText("Collected:");

        cancelJobEnquiryButton.setText("Cancel");

        searchJobEnquiryButton.setText("Search");
        searchJobEnquiryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchJobEnquiryButtonActionPerformed(evt);
            }
        });

        jobStatusComboBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jobStatusComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "In progress", "Completed", "Not started" }));

        jobCollectedComboBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jobCollectedComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "No", "Yes" }));

        jobPriorityComboBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jobPriorityComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "normal", "urgent", "stipulated", " " }));

        javax.swing.GroupLayout jobEnquiryPageLayout = new javax.swing.GroupLayout(jobEnquiryPage);
        jobEnquiryPage.setLayout(jobEnquiryPageLayout);
        jobEnquiryPageLayout.setHorizontalGroup(
            jobEnquiryPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jobEnquiryPageLayout.createSequentialGroup()
                .addGroup(jobEnquiryPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jobEnquiryPageLayout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addGroup(jobEnquiryPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jobEnquiryPageLayout.createSequentialGroup()
                                .addGroup(jobEnquiryPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jobPriorityLabel2)
                                    .addComponent(jobPriorityLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jobEnquiryPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jobCollectedComboBox, 0, 183, Short.MAX_VALUE)
                                    .addComponent(jobPriorityComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jobEnquiryPageLayout.createSequentialGroup()
                                .addGroup(jobEnquiryPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jobEnquiryPageLayout.createSequentialGroup()
                                        .addComponent(jobNumberLabel1)
                                        .addGap(40, 40, 40))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jobEnquiryPageLayout.createSequentialGroup()
                                        .addComponent(jobStatusLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(jobEnquiryPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jobNumberText, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jobStatusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                        .addComponent(searchJobNumberJobEnquiryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jobEnquiryPageLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cancelJobEnquiryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(40, 40, 40)
                .addComponent(searchJobEnquiryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68))
        );
        jobEnquiryPageLayout.setVerticalGroup(
            jobEnquiryPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jobEnquiryPageLayout.createSequentialGroup()
                .addGap(137, 137, 137)
                .addGroup(jobEnquiryPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jobEnquiryPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jobNumberLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jobNumberText, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jobEnquiryPageLayout.createSequentialGroup()
                        .addComponent(searchJobNumberJobEnquiryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)))
                .addGap(64, 64, 64)
                .addGroup(jobEnquiryPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jobStatusLabel)
                    .addComponent(jobStatusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jobEnquiryPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jobPriorityLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                    .addGroup(jobEnquiryPageLayout.createSequentialGroup()
                        .addComponent(jobPriorityComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jobEnquiryPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jobPriorityLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addGroup(jobEnquiryPageLayout.createSequentialGroup()
                        .addComponent(jobCollectedComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)))
                .addGap(115, 115, 115)
                .addGroup(jobEnquiryPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelJobEnquiryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchJobEnquiryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50))
        );

        cardPanel1.add(jobEnquiryPage, "jobEnquiryPage");

        searchJobPage.setBackground(new java.awt.Color(61, 96, 146));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Customer Number:");

        searchJobButton.setText("Search Job");
        searchJobButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchJobButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Job Number:");

        searchCustomerButton.setText("Search Customer");
        searchCustomerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchCustomerButtonActionPerformed(evt);
            }
        });

        backRecpHPButton.setText("Back");
        backRecpHPButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backRecpHPButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout searchJobPageLayout = new javax.swing.GroupLayout(searchJobPage);
        searchJobPage.setLayout(searchJobPageLayout);
        searchJobPageLayout.setHorizontalGroup(
            searchJobPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchJobPageLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(searchJobPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searchJobPageLayout.createSequentialGroup()
                        .addGroup(searchJobPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(46, 46, 46)
                        .addGroup(searchJobPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jobNumberTextField)
                            .addComponent(customerNumberText, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE))
                        .addGap(52, 52, 52)
                        .addGroup(searchJobPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(searchJobButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(searchCustomerButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(backRecpHPButton, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(77, Short.MAX_VALUE))
        );
        searchJobPageLayout.setVerticalGroup(
            searchJobPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchJobPageLayout.createSequentialGroup()
                .addGroup(searchJobPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, searchJobPageLayout.createSequentialGroup()
                        .addGap(173, 173, 173)
                        .addComponent(jobNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(searchJobPageLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(searchJobPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(searchJobButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(57, 57, 57)
                .addGroup(searchJobPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                    .addComponent(customerNumberText)
                    .addComponent(searchCustomerButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 222, Short.MAX_VALUE)
                .addComponent(backRecpHPButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53))
        );

        cardPanel1.add(searchJobPage, "searchJobPage");

        taskSearchResultsJobEnquiryPage.setBackground(new java.awt.Color(61, 96, 146));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Standard Job Code: ");

        standardJobCodeLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        standardJobCodeLabel.setForeground(new java.awt.Color(255, 255, 255));
        standardJobCodeLabel.setText("(Code) ");

        taskResultsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Task ID", "Description", "Location", "Shelf slot", "Status"
            }
        ));
        jScrollPane5.setViewportView(taskResultsTable);

        updateTaskButton.setText("Update");
        updateTaskButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateTaskButtonActionPerformed(evt);
            }
        });

        taskEnquiryBackButton.setText("Back");
        taskEnquiryBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                taskEnquiryBackButtonActionPerformed(evt);
            }
        });

        standardJobIndexLabel.setBackground(new java.awt.Color(61, 96, 146));
        standardJobIndexLabel.setForeground(new java.awt.Color(61, 96, 146));
        standardJobIndexLabel.setText("Hidden");

        javax.swing.GroupLayout taskSearchResultsJobEnquiryPageLayout = new javax.swing.GroupLayout(taskSearchResultsJobEnquiryPage);
        taskSearchResultsJobEnquiryPage.setLayout(taskSearchResultsJobEnquiryPageLayout);
        taskSearchResultsJobEnquiryPageLayout.setHorizontalGroup(
            taskSearchResultsJobEnquiryPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(taskSearchResultsJobEnquiryPageLayout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(taskSearchResultsJobEnquiryPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(taskSearchResultsJobEnquiryPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 714, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(taskSearchResultsJobEnquiryPageLayout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addGap(18, 18, 18)
                            .addComponent(standardJobCodeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(standardJobIndexLabel)))
                    .addGroup(taskSearchResultsJobEnquiryPageLayout.createSequentialGroup()
                        .addComponent(taskEnquiryBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(updateTaskButton)))
                .addContainerGap(118, Short.MAX_VALUE))
        );
        taskSearchResultsJobEnquiryPageLayout.setVerticalGroup(
            taskSearchResultsJobEnquiryPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(taskSearchResultsJobEnquiryPageLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(taskSearchResultsJobEnquiryPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(standardJobCodeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(standardJobIndexLabel))
                .addGap(40, 40, 40)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73)
                .addGroup(taskSearchResultsJobEnquiryPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateTaskButton, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(taskEnquiryBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(95, Short.MAX_VALUE))
        );

        jLabel3.getAccessibleContext().setAccessibleName("");
        standardJobCodeLabel.getAccessibleContext().setAccessibleName("sJCode");

        cardPanel1.add(taskSearchResultsJobEnquiryPage, "taskSearchResultsJobEnquiryPage");

        reminderLettersTablePage.setBackground(new java.awt.Color(61, 96, 146));

        reminderLettersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer name", "Invoice number", "Date", "Total amount"
            }
        ));
        jScrollPane6.setViewportView(reminderLettersTable);

        backCustomerPageButton.setText("Back");
        backCustomerPageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backCustomerPageButtonActionPerformed(evt);
            }
        });

        viewReminderLetterButton.setText("Create PDF");
        viewReminderLetterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewReminderLetterButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout reminderLettersTablePageLayout = new javax.swing.GroupLayout(reminderLettersTablePage);
        reminderLettersTablePage.setLayout(reminderLettersTablePageLayout);
        reminderLettersTablePageLayout.setHorizontalGroup(
            reminderLettersTablePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reminderLettersTablePageLayout.createSequentialGroup()
                .addGroup(reminderLettersTablePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(reminderLettersTablePageLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(backCustomerPageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addComponent(viewReminderLetterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, reminderLettersTablePageLayout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 764, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(87, Short.MAX_VALUE))
        );
        reminderLettersTablePageLayout.setVerticalGroup(
            reminderLettersTablePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reminderLettersTablePageLayout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(reminderLettersTablePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(backCustomerPageButton, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                    .addComponent(viewReminderLetterButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(58, Short.MAX_VALUE))
        );

        cardPanel1.add(reminderLettersTablePage, "reminderLettersTablePage");

        officeManagerCustomerPage.setBackground(new java.awt.Color(61, 96, 146));

        searchCustomerBtn.setText("Search Customer");
        searchCustomerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchCustomerBtnActionPerformed(evt);
            }
        });

        reminderLettersButton.setText("Reminder letters");
        reminderLettersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reminderLettersButtonActionPerformed(evt);
            }
        });

        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout officeManagerCustomerPageLayout = new javax.swing.GroupLayout(officeManagerCustomerPage);
        officeManagerCustomerPage.setLayout(officeManagerCustomerPageLayout);
        officeManagerCustomerPageLayout.setHorizontalGroup(
            officeManagerCustomerPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, officeManagerCustomerPageLayout.createSequentialGroup()
                .addContainerGap(215, Short.MAX_VALUE)
                .addComponent(reminderLettersButton)
                .addGap(156, 156, 156)
                .addComponent(searchCustomerBtn)
                .addGap(227, 227, 227))
            .addGroup(officeManagerCustomerPageLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        officeManagerCustomerPageLayout.setVerticalGroup(
            officeManagerCustomerPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(officeManagerCustomerPageLayout.createSequentialGroup()
                .addGap(256, 256, 256)
                .addGroup(officeManagerCustomerPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchCustomerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reminderLettersButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 211, Short.MAX_VALUE)
                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52))
        );

        cardPanel1.add(officeManagerCustomerPage, "officeManagerCustomerPage");

        manageTasksPage.setBackground(new java.awt.Color(61, 96, 146));

        jButton3.setText("Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        taskTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Task ID", "Description", "Location", "Shelf Slot"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(taskTable);

        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout manageTasksPageLayout = new javax.swing.GroupLayout(manageTasksPage);
        manageTasksPage.setLayout(manageTasksPageLayout);
        manageTasksPageLayout.setHorizontalGroup(
            manageTasksPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageTasksPageLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(manageTasksPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 870, Short.MAX_VALUE)
                    .addGroup(manageTasksPageLayout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        manageTasksPageLayout.setVerticalGroup(
            manageTasksPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, manageTasksPageLayout.createSequentialGroup()
                .addContainerGap(52, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(manageTasksPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                    .addComponent(editButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(79, 79, 79))
        );

        cardPanel1.add(manageTasksPage, "manageTasksPage");

        taskPage.setBackground(new java.awt.Color(61, 96, 146));

        manageTasksButton.setText("Manage Tasks");
        manageTasksButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageTasksButtonActionPerformed(evt);
            }
        });

        createTaskButton.setText("Create Task");
        createTaskButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createTaskButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout taskPageLayout = new javax.swing.GroupLayout(taskPage);
        taskPage.setLayout(taskPageLayout);
        taskPageLayout.setHorizontalGroup(
            taskPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(taskPageLayout.createSequentialGroup()
                .addGap(252, 252, 252)
                .addComponent(manageTasksButton, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(110, 110, 110)
                .addComponent(createTaskButton, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(252, Short.MAX_VALUE))
        );
        taskPageLayout.setVerticalGroup(
            taskPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(taskPageLayout.createSequentialGroup()
                .addGap(267, 267, 267)
                .addGroup(taskPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(manageTasksButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(createTaskButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(292, Short.MAX_VALUE))
        );

        cardPanel1.add(taskPage, "taskPage");

        loginPage.setBackground(new java.awt.Color(61, 96, 146));
        loginPage.setMaximumSize(new java.awt.Dimension(900, 640));
        loginPage.setMinimumSize(new java.awt.Dimension(900, 640));
        loginPage.setPreferredSize(new java.awt.Dimension(900, 640));

        loginLabel.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        loginLabel.setForeground(new java.awt.Color(255, 255, 255));
        loginLabel.setText("Login");

        loginButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        loginButton.setText("Login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        passwordField.setMaximumSize(new java.awt.Dimension(250, 42));
        passwordField.setMinimumSize(new java.awt.Dimension(250, 42));
        passwordField.setPreferredSize(new java.awt.Dimension(250, 42));

        userIDField.setMaximumSize(new java.awt.Dimension(250, 42));
        userIDField.setMinimumSize(new java.awt.Dimension(250, 42));
        userIDField.setPreferredSize(new java.awt.Dimension(250, 42));

        javax.swing.GroupLayout loginPageLayout = new javax.swing.GroupLayout(loginPage);
        loginPage.setLayout(loginPageLayout);
        loginPageLayout.setHorizontalGroup(
            loginPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPageLayout.createSequentialGroup()
                .addContainerGap(326, Short.MAX_VALUE)
                .addGroup(loginPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(loginLabel)
                    .addComponent(userIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(324, 324, 324))
        );
        loginPageLayout.setVerticalGroup(
            loginPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPageLayout.createSequentialGroup()
                .addGap(215, 215, 215)
                .addComponent(loginLabel)
                .addGap(40, 40, 40)
                .addComponent(userIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(110, 110, 110))
        );

        cardPanel1.add(loginPage, "login");

        restorePage.setBackground(new java.awt.Color(61, 96, 146));
        restorePage.setMaximumSize(new java.awt.Dimension(900, 640));
        restorePage.setMinimumSize(new java.awt.Dimension(900, 640));
        restorePage.setPreferredSize(new java.awt.Dimension(900, 640));

        restoreLabel.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        restoreLabel.setForeground(new java.awt.Color(255, 255, 255));
        restoreLabel.setText("Restore");

        RestoreButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        RestoreButton.setText("Restore");
        RestoreButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RestoreButtonActionPerformed(evt);
            }
        });

        chooseFileButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        chooseFileButton.setText("Choose file");
        chooseFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseFileButtonActionPerformed(evt);
            }
        });

        fileChosenField.setMaximumSize(new java.awt.Dimension(250, 37));
        fileChosenField.setMinimumSize(new java.awt.Dimension(250, 37));
        fileChosenField.setPreferredSize(new java.awt.Dimension(250, 37));

        javax.swing.GroupLayout restorePageLayout = new javax.swing.GroupLayout(restorePage);
        restorePage.setLayout(restorePageLayout);
        restorePageLayout.setHorizontalGroup(
            restorePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, restorePageLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(restorePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(RestoreButton, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(restoreLabel))
                .addGap(380, 380, 380))
            .addGroup(restorePageLayout.createSequentialGroup()
                .addGap(242, 242, 242)
                .addComponent(chooseFileButton)
                .addGap(17, 17, 17)
                .addComponent(fileChosenField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(242, 242, 242))
        );
        restorePageLayout.setVerticalGroup(
            restorePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(restorePageLayout.createSequentialGroup()
                .addGap(215, 215, 215)
                .addComponent(restoreLabel)
                .addGap(40, 40, 40)
                .addGroup(restorePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(chooseFileButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fileChosenField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(RestoreButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(211, Short.MAX_VALUE))
        );

        cardPanel1.add(restorePage, "restore");

        createUserPage.setBackground(new java.awt.Color(61, 96, 146));
        createUserPage.setMaximumSize(new java.awt.Dimension(900, 640));
        createUserPage.setMinimumSize(new java.awt.Dimension(900, 640));
        createUserPage.setPreferredSize(new java.awt.Dimension(900, 640));

        newUserLabel.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        newUserLabel.setForeground(new java.awt.Color(255, 255, 255));
        newUserLabel.setText("New User");

        userLastNameField.setMaximumSize(new java.awt.Dimension(250, 42));
        userLastNameField.setMinimumSize(new java.awt.Dimension(250, 42));
        userLastNameField.setPreferredSize(new java.awt.Dimension(250, 42));

        userFirstNameField.setMaximumSize(new java.awt.Dimension(250, 42));
        userFirstNameField.setMinimumSize(new java.awt.Dimension(250, 42));
        userFirstNameField.setPreferredSize(new java.awt.Dimension(250, 42));

        NewRepeatPasswordField.setMaximumSize(new java.awt.Dimension(250, 42));
        NewRepeatPasswordField.setMinimumSize(new java.awt.Dimension(250, 42));
        NewRepeatPasswordField.setPreferredSize(new java.awt.Dimension(250, 42));
        NewRepeatPasswordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewRepeatPasswordFieldActionPerformed(evt);
            }
        });

        NewPasswordField.setMaximumSize(new java.awt.Dimension(250, 42));
        NewPasswordField.setMinimumSize(new java.awt.Dimension(250, 42));
        NewPasswordField.setPreferredSize(new java.awt.Dimension(250, 42));
        NewPasswordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewPasswordFieldActionPerformed(evt);
            }
        });

        userRoleDD.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Office Manager","Shift Manager","Receptionist","Technician"}));
        userRoleDD.setMaximumSize(new java.awt.Dimension(250, 42));
        userRoleDD.setMinimumSize(new java.awt.Dimension(250, 42));
        userRoleDD.setPreferredSize(new java.awt.Dimension(250, 42));
        userRoleDD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userRoleDDActionPerformed(evt);
            }
        });

        firstnameLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        firstnameLabel.setForeground(new java.awt.Color(255, 255, 255));
        firstnameLabel.setText("Firstname:");

        lastnameLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lastnameLabel.setForeground(new java.awt.Color(255, 255, 255));
        lastnameLabel.setText("Lastname:");

        RoleLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        RoleLabel.setForeground(new java.awt.Color(255, 255, 255));
        RoleLabel.setText("Role:");

        passwordLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        passwordLabel.setForeground(new java.awt.Color(255, 255, 255));
        passwordLabel.setText("Password:");

        ReenterPasswordLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        ReenterPasswordLabel.setForeground(new java.awt.Color(255, 255, 255));
        ReenterPasswordLabel.setText("Reenter password:");

        createUserButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        createUserButton.setText("Create User");
        createUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createUserButtonActionPerformed(evt);
            }
        });

        cancelButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout createUserPageLayout = new javax.swing.GroupLayout(createUserPage);
        createUserPage.setLayout(createUserPageLayout);
        createUserPageLayout.setHorizontalGroup(
            createUserPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createUserPageLayout.createSequentialGroup()
                .addGap(204, 204, 204)
                .addGroup(createUserPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(firstnameLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lastnameLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(RoleLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(passwordLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ReenterPasswordLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(createUserPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(userRoleDD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userFirstNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userLastNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NewPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NewRepeatPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createUserPageLayout.createSequentialGroup()
                .addContainerGap(363, Short.MAX_VALUE)
                .addGroup(createUserPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createUserPageLayout.createSequentialGroup()
                        .addComponent(cancelButton)
                        .addGap(35, 35, 35)
                        .addComponent(createUserButton)
                        .addGap(50, 50, 50))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createUserPageLayout.createSequentialGroup()
                        .addComponent(newUserLabel)
                        .addGap(362, 362, 362))))
        );
        createUserPageLayout.setVerticalGroup(
            createUserPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createUserPageLayout.createSequentialGroup()
                .addContainerGap(84, Short.MAX_VALUE)
                .addComponent(newUserLabel)
                .addGap(18, 18, 18)
                .addGroup(createUserPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userFirstNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(firstnameLabel))
                .addGap(25, 25, 25)
                .addGroup(createUserPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userLastNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastnameLabel))
                .addGap(25, 25, 25)
                .addGroup(createUserPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userRoleDD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RoleLabel))
                .addGap(25, 25, 25)
                .addGroup(createUserPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NewPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordLabel))
                .addGap(25, 25, 25)
                .addGroup(createUserPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NewRepeatPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ReenterPasswordLabel))
                .addGap(59, 59, 59)
                .addGroup(createUserPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(createUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(80, 80, 80))
        );

        cardPanel1.add(createUserPage, "createUser");

        officeManagerPage.setBackground(new java.awt.Color(61, 96, 146));
        officeManagerPage.setMaximumSize(new java.awt.Dimension(900, 640));
        officeManagerPage.setMinimumSize(new java.awt.Dimension(900, 640));

        jobOfficeManager.setText("Job");

        standardJobsOfficeManager.setText("Standard Jobs");

        acceptPaymentOfficeManager.setText("Accept Payment");
        acceptPaymentOfficeManager.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptPaymentOfficeManagerActionPerformed(evt);
            }
        });

        tasksOfficeManager.setText("Tasks");
        tasksOfficeManager.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tasksOfficeManagerActionPerformed(evt);
            }
        });

        reportsOfficeManager.setText("Reports");

        usersOfficeManager.setText("Users");

        manageCustomersOfficeManager.setText("Manage Customers");
        manageCustomersOfficeManager.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageCustomersOfficeManagerActionPerformed(evt);
            }
        });

        settingsOfficeManager.setText("Settings");

        javax.swing.GroupLayout officeManagerPageLayout = new javax.swing.GroupLayout(officeManagerPage);
        officeManagerPage.setLayout(officeManagerPageLayout);
        officeManagerPageLayout.setHorizontalGroup(
            officeManagerPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(officeManagerPageLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(officeManagerPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jobOfficeManager, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reportsOfficeManager, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(officeManagerPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(officeManagerPageLayout.createSequentialGroup()
                        .addComponent(acceptPaymentOfficeManager, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tasksOfficeManager, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(standardJobsOfficeManager, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(officeManagerPageLayout.createSequentialGroup()
                        .addComponent(usersOfficeManager, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(manageCustomersOfficeManager, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(settingsOfficeManager, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24))
        );
        officeManagerPageLayout.setVerticalGroup(
            officeManagerPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(officeManagerPageLayout.createSequentialGroup()
                .addGap(127, 127, 127)
                .addGroup(officeManagerPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jobOfficeManager, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(acceptPaymentOfficeManager, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tasksOfficeManager, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(standardJobsOfficeManager, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(97, 97, 97)
                .addGroup(officeManagerPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reportsOfficeManager, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usersOfficeManager, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(manageCustomersOfficeManager, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(settingsOfficeManager, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(158, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout officeManagerHomePageLayout = new javax.swing.GroupLayout(officeManagerHomePage);
        officeManagerHomePage.setLayout(officeManagerHomePageLayout);
        officeManagerHomePageLayout.setHorizontalGroup(
            officeManagerHomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, officeManagerHomePageLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(officeManagerPage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        officeManagerHomePageLayout.setVerticalGroup(
            officeManagerHomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(officeManagerHomePageLayout.createSequentialGroup()
                .addComponent(officeManagerPage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        cardPanel1.add(officeManagerHomePage, "officeManagerHomePage");

        shiftManagerPage.setBackground(new java.awt.Color(61, 96, 146));
        shiftManagerPage.setMaximumSize(new java.awt.Dimension(900, 640));
        shiftManagerPage.setMinimumSize(new java.awt.Dimension(900, 640));

        jobShiftManager.setText("Job");

        standardJobsShiftManager.setText("Standard Jobs");

        acceptPaymentShiftManager.setText("Accept Payment");
        acceptPaymentShiftManager.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptPaymentShiftManagerActionPerformed(evt);
            }
        });

        tasksShiftManager.setText("Tasks");

        reportsShiftManager.setText("Reports");

        settingsShiftManager.setText("Settings");

        javax.swing.GroupLayout shiftManagerPageLayout = new javax.swing.GroupLayout(shiftManagerPage);
        shiftManagerPage.setLayout(shiftManagerPageLayout);
        shiftManagerPageLayout.setHorizontalGroup(
            shiftManagerPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(shiftManagerPageLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(shiftManagerPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(standardJobsShiftManager, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jobShiftManager, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(82, 82, 82)
                .addGroup(shiftManagerPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(reportsShiftManager, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(acceptPaymentShiftManager, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)
                .addGroup(shiftManagerPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tasksShiftManager, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(settingsShiftManager, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(80, 80, 80))
        );
        shiftManagerPageLayout.setVerticalGroup(
            shiftManagerPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(shiftManagerPageLayout.createSequentialGroup()
                .addGap(127, 127, 127)
                .addGroup(shiftManagerPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jobShiftManager, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(acceptPaymentShiftManager, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tasksShiftManager, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(92, 92, 92)
                .addGroup(shiftManagerPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reportsShiftManager, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(standardJobsShiftManager, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(settingsShiftManager, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(163, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout shiftManagerHomePageLayout = new javax.swing.GroupLayout(shiftManagerHomePage);
        shiftManagerHomePage.setLayout(shiftManagerHomePageLayout);
        shiftManagerHomePageLayout.setHorizontalGroup(
            shiftManagerHomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, shiftManagerHomePageLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(shiftManagerPage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        shiftManagerHomePageLayout.setVerticalGroup(
            shiftManagerHomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(shiftManagerHomePageLayout.createSequentialGroup()
                .addComponent(shiftManagerPage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 2, Short.MAX_VALUE))
        );

        cardPanel1.add(shiftManagerHomePage, "shiftManagerHomePage");

        technicianPage.setBackground(new java.awt.Color(61, 96, 146));
        technicianPage.setMaximumSize(new java.awt.Dimension(900, 640));
        technicianPage.setMinimumSize(new java.awt.Dimension(900, 640));

        jobEnquiryTechnician.setText("Job Enquiry");
        jobEnquiryTechnician.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jobEnquiryTechnicianActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout technicianPageLayout = new javax.swing.GroupLayout(technicianPage);
        technicianPage.setLayout(technicianPageLayout);
        technicianPageLayout.setHorizontalGroup(
            technicianPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(technicianPageLayout.createSequentialGroup()
                .addGap(343, 343, 343)
                .addComponent(jobEnquiryTechnician, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(361, Short.MAX_VALUE))
        );
        technicianPageLayout.setVerticalGroup(
            technicianPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(technicianPageLayout.createSequentialGroup()
                .addGap(215, 215, 215)
                .addComponent(jobEnquiryTechnician, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(299, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout technicianHomePageLayout = new javax.swing.GroupLayout(technicianHomePage);
        technicianHomePage.setLayout(technicianHomePageLayout);
        technicianHomePageLayout.setHorizontalGroup(
            technicianHomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, technicianHomePageLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(technicianPage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        technicianHomePageLayout.setVerticalGroup(
            technicianHomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(technicianHomePageLayout.createSequentialGroup()
                .addComponent(technicianPage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        cardPanel1.add(technicianHomePage, "technicianHomePage");

        standardJobSearchResultsJobEnquiryPage.setBackground(new java.awt.Color(61, 96, 146));

        standardJobResults.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        standardJobResults.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Code", "Description", "Status"
            }
        ));
        jScrollPane4.setViewportView(standardJobResults);

        viewStandardJobButton.setText("View");
        viewStandardJobButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewStandardJobButtonActionPerformed(evt);
            }
        });

        backJobSearchResultsButton.setText("Back");
        backJobSearchResultsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJobSearchResultsButtonActionPerformed(evt);
            }
        });

        jobNumberLabel.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jobNumberLabel.setForeground(new java.awt.Color(255, 255, 255));
        jobNumberLabel.setText("(JN)");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Job Number: ");

        jobIndexLabel.setBackground(new java.awt.Color(61, 96, 146));
        jobIndexLabel.setForeground(new java.awt.Color(61, 96, 146));
        jobIndexLabel.setText("jLabel4");

        javax.swing.GroupLayout standardJobSearchResultsJobEnquiryPageLayout = new javax.swing.GroupLayout(standardJobSearchResultsJobEnquiryPage);
        standardJobSearchResultsJobEnquiryPage.setLayout(standardJobSearchResultsJobEnquiryPageLayout);
        standardJobSearchResultsJobEnquiryPageLayout.setHorizontalGroup(
            standardJobSearchResultsJobEnquiryPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(standardJobSearchResultsJobEnquiryPageLayout.createSequentialGroup()
                .addGroup(standardJobSearchResultsJobEnquiryPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(standardJobSearchResultsJobEnquiryPageLayout.createSequentialGroup()
                        .addGap(273, 273, 273)
                        .addComponent(jobNumberLabel)
                        .addGap(134, 134, 134)
                        .addComponent(jobIndexLabel))
                    .addGroup(standardJobSearchResultsJobEnquiryPageLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(standardJobSearchResultsJobEnquiryPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(standardJobSearchResultsJobEnquiryPageLayout.createSequentialGroup()
                                .addComponent(backJobSearchResultsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(viewStandardJobButton, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 822, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(43, Short.MAX_VALUE))
            .addGroup(standardJobSearchResultsJobEnquiryPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(standardJobSearchResultsJobEnquiryPageLayout.createSequentialGroup()
                    .addGap(45, 45, 45)
                    .addComponent(jLabel5)
                    .addContainerGap(639, Short.MAX_VALUE)))
        );
        standardJobSearchResultsJobEnquiryPageLayout.setVerticalGroup(
            standardJobSearchResultsJobEnquiryPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(standardJobSearchResultsJobEnquiryPageLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(standardJobSearchResultsJobEnquiryPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jobNumberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jobIndexLabel))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(standardJobSearchResultsJobEnquiryPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewStandardJobButton, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backJobSearchResultsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(54, Short.MAX_VALUE))
            .addGroup(standardJobSearchResultsJobEnquiryPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(standardJobSearchResultsJobEnquiryPageLayout.createSequentialGroup()
                    .addGap(43, 43, 43)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(554, Short.MAX_VALUE)))
        );

        cardPanel1.add(standardJobSearchResultsJobEnquiryPage, "standardJobSearchResultsJobEnquiryPage");

        receptionHomePage.setBackground(new java.awt.Color(61, 96, 146));
        receptionHomePage.setMaximumSize(new java.awt.Dimension(900, 640));
        receptionHomePage.setMinimumSize(new java.awt.Dimension(900, 640));

        jobReceptionist.setText("Job");
        jobReceptionist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jobReceptionistActionPerformed(evt);
            }
        });

        acceptPaymentReceptionist.setText("Accept Payment");
        acceptPaymentReceptionist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptPaymentReceptionistActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout receptionHomePageLayout = new javax.swing.GroupLayout(receptionHomePage);
        receptionHomePage.setLayout(receptionHomePageLayout);
        receptionHomePageLayout.setHorizontalGroup(
            receptionHomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(receptionHomePageLayout.createSequentialGroup()
                .addGap(195, 195, 195)
                .addComponent(jobReceptionist, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(125, 125, 125)
                .addComponent(acceptPaymentReceptionist, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(206, Short.MAX_VALUE))
        );
        receptionHomePageLayout.setVerticalGroup(
            receptionHomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(receptionHomePageLayout.createSequentialGroup()
                .addGap(231, 231, 231)
                .addGroup(receptionHomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jobReceptionist, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(acceptPaymentReceptionist, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(283, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout receptionistHomePageLayout = new javax.swing.GroupLayout(receptionistHomePage);
        receptionistHomePage.setLayout(receptionistHomePageLayout);
        receptionistHomePageLayout.setHorizontalGroup(
            receptionistHomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, receptionistHomePageLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(receptionHomePage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        receptionistHomePageLayout.setVerticalGroup(
            receptionistHomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(receptionistHomePageLayout.createSequentialGroup()
                .addComponent(receptionHomePage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 2, Short.MAX_VALUE))
        );

        cardPanel1.add(receptionistHomePage, "receptionistHomePage");

        createTaskPage.setBackground(new java.awt.Color(61, 96, 146));
        createTaskPage.setMaximumSize(new java.awt.Dimension(900, 640));
        createTaskPage.setMinimumSize(new java.awt.Dimension(900, 640));

        newTaskLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        newTaskLabel1.setForeground(new java.awt.Color(255, 255, 255));
        newTaskLabel1.setText("New Task");

        descriptionNewTaskField.setMaximumSize(new java.awt.Dimension(250, 42));
        descriptionNewTaskField.setMinimumSize(new java.awt.Dimension(250, 42));
        descriptionNewTaskField.setPreferredSize(new java.awt.Dimension(250, 42));

        durationNewTaskDD.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24"}));
        durationNewTaskDD.setMaximumSize(new java.awt.Dimension(250, 42));
        durationNewTaskDD.setMinimumSize(new java.awt.Dimension(250, 42));
        durationNewTaskDD.setPreferredSize(new java.awt.Dimension(250, 42));
        durationNewTaskDD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                durationNewTaskDDActionPerformed(evt);
            }
        });

        descriptionLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        descriptionLabel.setForeground(new java.awt.Color(255, 255, 255));
        descriptionLabel.setText("Description:");

        durationLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        durationLabel.setForeground(new java.awt.Color(255, 255, 255));
        durationLabel.setText("Duration:");

        priceLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        priceLabel.setForeground(new java.awt.Color(255, 255, 255));
        priceLabel.setText("Price:");

        departmentNewTaskLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        departmentNewTaskLabel.setForeground(new java.awt.Color(255, 255, 255));
        departmentNewTaskLabel.setText("Department:");

        shelfSlotNewTaskLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        shelfSlotNewTaskLabel.setForeground(new java.awt.Color(255, 255, 255));
        shelfSlotNewTaskLabel.setText("Shelf slot:");

        createNewTaskButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        createNewTaskButton.setText("Create ");
        createNewTaskButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createNewTaskButtonActionPerformed(evt);
            }
        });

        cancelButtonCreateTask.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        cancelButtonCreateTask.setText("Cancel");
        cancelButtonCreateTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonCreateTaskActionPerformed(evt);
            }
        });

        shelfSlotTaskDD.setModel(new javax.swing.DefaultComboBoxModel<>(controller.getShelfSlots()));
        shelfSlotTaskDD.setMaximumSize(new java.awt.Dimension(250, 42));
        shelfSlotTaskDD.setMinimumSize(new java.awt.Dimension(250, 42));
        shelfSlotTaskDD.setPreferredSize(new java.awt.Dimension(250, 42));
        shelfSlotTaskDD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shelfSlotTaskDDActionPerformed(evt);
            }
        });

        departmentNewTaskDD.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Copy room","Dark room","Development area", "Printing room", "Finishing room", "Packaging department"}));
        departmentNewTaskDD.setMaximumSize(new java.awt.Dimension(250, 42));
        departmentNewTaskDD.setMinimumSize(new java.awt.Dimension(250, 42));
        departmentNewTaskDD.setPreferredSize(new java.awt.Dimension(250, 42));
        departmentNewTaskDD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departmentNewTaskDDActionPerformed(evt);
            }
        });

        durationNewTaskMinsDD.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"0","15","30","45"}));
        durationNewTaskMinsDD.setMaximumSize(new java.awt.Dimension(250, 42));
        durationNewTaskMinsDD.setMinimumSize(new java.awt.Dimension(250, 42));
        durationNewTaskMinsDD.setPreferredSize(new java.awt.Dimension(250, 42));
        durationNewTaskMinsDD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                durationNewTaskMinsDDActionPerformed(evt);
            }
        });

        priceNewTaskField.setMaximumSize(new java.awt.Dimension(250, 42));
        priceNewTaskField.setMinimumSize(new java.awt.Dimension(250, 42));
        priceNewTaskField.setPreferredSize(new java.awt.Dimension(250, 42));

        hoursLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        hoursLabel.setForeground(new java.awt.Color(255, 255, 255));
        hoursLabel.setText("hrs");

        minutesLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        minutesLabel.setForeground(new java.awt.Color(255, 255, 255));
        minutesLabel.setText("mins");

        javax.swing.GroupLayout createTaskPageLayout = new javax.swing.GroupLayout(createTaskPage);
        createTaskPage.setLayout(createTaskPageLayout);
        createTaskPageLayout.setHorizontalGroup(
            createTaskPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createTaskPageLayout.createSequentialGroup()
                .addGap(204, 204, 204)
                .addGroup(createTaskPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(descriptionLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(durationLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(priceLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(departmentNewTaskLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(shelfSlotNewTaskLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(createTaskPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(descriptionNewTaskField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(shelfSlotTaskDD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(departmentNewTaskDD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(createTaskPageLayout.createSequentialGroup()
                        .addComponent(durationNewTaskDD, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(hoursLabel)
                        .addGap(18, 18, 18)
                        .addComponent(durationNewTaskMinsDD, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(minutesLabel))
                    .addComponent(priceNewTaskField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(134, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createTaskPageLayout.createSequentialGroup()
                .addContainerGap(361, Short.MAX_VALUE)
                .addGroup(createTaskPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createTaskPageLayout.createSequentialGroup()
                        .addComponent(newTaskLabel1)
                        .addGap(362, 362, 362))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createTaskPageLayout.createSequentialGroup()
                        .addComponent(cancelButtonCreateTask)
                        .addGap(35, 35, 35)
                        .addComponent(createNewTaskButton)
                        .addGap(50, 50, 50))))
        );
        createTaskPageLayout.setVerticalGroup(
            createTaskPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createTaskPageLayout.createSequentialGroup()
                .addContainerGap(92, Short.MAX_VALUE)
                .addComponent(newTaskLabel1)
                .addGap(18, 18, 18)
                .addGroup(createTaskPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(descriptionNewTaskField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(descriptionLabel))
                .addGap(26, 26, 26)
                .addGroup(createTaskPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(durationLabel)
                    .addComponent(durationNewTaskDD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(durationNewTaskMinsDD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hoursLabel)
                    .addComponent(minutesLabel))
                .addGap(23, 23, 23)
                .addGroup(createTaskPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(priceLabel)
                    .addComponent(priceNewTaskField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(createTaskPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(departmentNewTaskLabel)
                    .addComponent(departmentNewTaskDD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(createTaskPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(shelfSlotNewTaskLabel)
                    .addComponent(shelfSlotTaskDD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58)
                .addGroup(createTaskPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(cancelButtonCreateTask, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(createNewTaskButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(80, 80, 80))
        );

        cardPanel1.add(createTaskPage, "createNewTask");

        editTaskPage.setBackground(new java.awt.Color(61, 96, 146));

        newDescriptionLabel.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        newDescriptionLabel.setForeground(new java.awt.Color(255, 255, 255));
        newDescriptionLabel.setText("New Description");

        newDescriptionLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        newDescriptionLabel1.setForeground(new java.awt.Color(255, 255, 255));
        newDescriptionLabel1.setText("New Department");

        newDescriptionLabel2.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        newDescriptionLabel2.setForeground(new java.awt.Color(255, 255, 255));
        newDescriptionLabel2.setText("New Price");

        newDescriptionLabel3.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        newDescriptionLabel3.setForeground(new java.awt.Color(255, 255, 255));
        newDescriptionLabel3.setText("New Shelf Slot");

        cancelBtn.setText("Cancel");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        departmentComboBox.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        departmentComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Copy Room", "Development Area", "Dark Room", "Finishing Room", "Packaging Department", "Printing Room", " " }));

        taskIDLabel.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        taskIDLabel.setForeground(new java.awt.Color(255, 255, 255));
        taskIDLabel.setText("Task ID");

        javax.swing.GroupLayout editTaskPageLayout = new javax.swing.GroupLayout(editTaskPage);
        editTaskPage.setLayout(editTaskPageLayout);
        editTaskPageLayout.setHorizontalGroup(
            editTaskPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editTaskPageLayout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addGroup(editTaskPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editTaskPageLayout.createSequentialGroup()
                        .addGroup(editTaskPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newDescriptionLabel3)
                            .addComponent(newDescriptionLabel1)
                            .addComponent(newDescriptionLabel2))
                        .addGroup(editTaskPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(editTaskPageLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                                .addGroup(editTaskPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(shelfSlotText, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                                    .addComponent(priceText)))
                            .addGroup(editTaskPageLayout.createSequentialGroup()
                                .addGap(71, 71, 71)
                                .addComponent(departmentComboBox, 0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editTaskPageLayout.createSequentialGroup()
                        .addGroup(editTaskPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(taskIDLabel)
                            .addComponent(newDescriptionLabel))
                        .addGap(82, 82, 82)
                        .addGroup(editTaskPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(descriptionText, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                            .addComponent(taskIDText))))
                .addContainerGap(193, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editTaskPageLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67)
                .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(121, 121, 121))
        );
        editTaskPageLayout.setVerticalGroup(
            editTaskPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editTaskPageLayout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(editTaskPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(taskIDLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(taskIDText))
                .addGap(18, 18, 18)
                .addGroup(editTaskPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(descriptionText)
                    .addComponent(newDescriptionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(32, 32, 32)
                .addGroup(editTaskPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(newDescriptionLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(departmentComboBox))
                .addGap(27, 27, 27)
                .addGroup(editTaskPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(shelfSlotText)
                    .addComponent(newDescriptionLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(31, 31, 31)
                .addGroup(editTaskPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(newDescriptionLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(priceText))
                .addGap(86, 86, 86)
                .addGroup(editTaskPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(91, 91, 91))
        );

        cardPanel1.add(editTaskPage, "editTaskPage");

        cardPanel2.setBackground(new java.awt.Color(204, 255, 204));
        cardPanel2.setPreferredSize(new java.awt.Dimension(900, 60));
        cardPanel2.setLayout(new java.awt.CardLayout());

        welcomeBar1.setBackground(new java.awt.Color(33, 53, 80));
        welcomeBar1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        welcomeBar1.setMaximumSize(new java.awt.Dimension(900, 60));
        welcomeBar1.setMinimumSize(new java.awt.Dimension(900, 60));

        javax.swing.GroupLayout welcomeBar1Layout = new javax.swing.GroupLayout(welcomeBar1);
        welcomeBar1.setLayout(welcomeBar1Layout);
        welcomeBar1Layout.setHorizontalGroup(
            welcomeBar1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 896, Short.MAX_VALUE)
        );
        welcomeBar1Layout.setVerticalGroup(
            welcomeBar1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 56, Short.MAX_VALUE)
        );

        cardPanel2.add(welcomeBar1, "welcomeBar1");

        welcomeBar2.setBackground(new java.awt.Color(33, 53, 80));
        welcomeBar2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        backButton.setBackground(new java.awt.Color(40, 64, 97));
        backButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        backButton.setForeground(new java.awt.Color(255, 255, 255));
        backButton.setText("Back");
        backButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        backButton.setOpaque(true);
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout welcomeBar2Layout = new javax.swing.GroupLayout(welcomeBar2);
        welcomeBar2.setLayout(welcomeBar2Layout);
        welcomeBar2Layout.setHorizontalGroup(
            welcomeBar2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(welcomeBar2Layout.createSequentialGroup()
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 793, Short.MAX_VALUE))
        );
        welcomeBar2Layout.setVerticalGroup(
            welcomeBar2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backButton, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
        );

        cardPanel2.add(welcomeBar2, "welcomeBar2");

        welcomeBar3.setBackground(new java.awt.Color(33, 53, 80));
        welcomeBar3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        officeManagerText.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        officeManagerText.setForeground(new java.awt.Color(255, 255, 255));
        officeManagerText.setText("Office Manager");

        officeManagerWelcomeText.setFont(new java.awt.Font("Lucida Grande", 1, 26)); // NOI18N
        officeManagerWelcomeText.setForeground(new java.awt.Color(255, 255, 255));
        officeManagerWelcomeText.setText("Welcome, User");

        logOutButton.setBackground(new java.awt.Color(40, 64, 97));
        logOutButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        logOutButton.setForeground(new java.awt.Color(255, 255, 255));
        logOutButton.setText("Log out");
        logOutButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        logOutButton.setOpaque(true);
        logOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout welcomeBar3Layout = new javax.swing.GroupLayout(welcomeBar3);
        welcomeBar3.setLayout(welcomeBar3Layout);
        welcomeBar3Layout.setHorizontalGroup(
            welcomeBar3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(welcomeBar3Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(officeManagerText, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(146, 146, 146)
                .addComponent(officeManagerWelcomeText, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 209, Short.MAX_VALUE)
                .addComponent(logOutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        welcomeBar3Layout.setVerticalGroup(
            welcomeBar3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, welcomeBar3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(welcomeBar3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(officeManagerText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(officeManagerWelcomeText, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(logOutButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout homePageOMBarLayout = new javax.swing.GroupLayout(homePageOMBar);
        homePageOMBar.setLayout(homePageOMBarLayout);
        homePageOMBarLayout.setHorizontalGroup(
            homePageOMBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, homePageOMBarLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(welcomeBar3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        homePageOMBarLayout.setVerticalGroup(
            homePageOMBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homePageOMBarLayout.createSequentialGroup()
                .addComponent(welcomeBar3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        cardPanel2.add(homePageOMBar, "homePageOMBar");

        welcomeBar4.setBackground(new java.awt.Color(33, 53, 80));
        welcomeBar4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        officeManagerText1.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        officeManagerText1.setForeground(new java.awt.Color(255, 255, 255));
        officeManagerText1.setText("Shift Manager");

        officeManagerWelcomeText1.setFont(new java.awt.Font("Lucida Grande", 1, 26)); // NOI18N
        officeManagerWelcomeText1.setForeground(new java.awt.Color(255, 255, 255));
        officeManagerWelcomeText1.setText("Welcome, User");

        logOutButton1.setBackground(new java.awt.Color(40, 64, 97));
        logOutButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        logOutButton1.setForeground(new java.awt.Color(255, 255, 255));
        logOutButton1.setText("Log out");
        logOutButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        logOutButton1.setOpaque(true);
        logOutButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout welcomeBar4Layout = new javax.swing.GroupLayout(welcomeBar4);
        welcomeBar4.setLayout(welcomeBar4Layout);
        welcomeBar4Layout.setHorizontalGroup(
            welcomeBar4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(welcomeBar4Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(officeManagerText1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(146, 146, 146)
                .addComponent(officeManagerWelcomeText1, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 209, Short.MAX_VALUE)
                .addComponent(logOutButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        welcomeBar4Layout.setVerticalGroup(
            welcomeBar4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, welcomeBar4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(welcomeBar4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(officeManagerText1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(officeManagerWelcomeText1, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(logOutButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout homePagesSMBarLayout = new javax.swing.GroupLayout(homePagesSMBar);
        homePagesSMBar.setLayout(homePagesSMBarLayout);
        homePagesSMBarLayout.setHorizontalGroup(
            homePagesSMBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, homePagesSMBarLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(welcomeBar4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        homePagesSMBarLayout.setVerticalGroup(
            homePagesSMBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homePagesSMBarLayout.createSequentialGroup()
                .addComponent(welcomeBar4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        cardPanel2.add(homePagesSMBar, "homePageSMBar");

        homePageTBar.setBackground(new java.awt.Color(33, 53, 80));
        homePageTBar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        homePageTBar.setMaximumSize(new java.awt.Dimension(900, 60));
        homePageTBar.setMinimumSize(new java.awt.Dimension(900, 60));

        homePageTechnician.setBackground(new java.awt.Color(33, 53, 80));
        homePageTechnician.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        officeManagerText2.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        officeManagerText2.setForeground(new java.awt.Color(255, 255, 255));
        officeManagerText2.setText("Technician");

        officeManagerWelcomeText2.setFont(new java.awt.Font("Lucida Grande", 1, 26)); // NOI18N
        officeManagerWelcomeText2.setForeground(new java.awt.Color(255, 255, 255));
        officeManagerWelcomeText2.setText("Welcome, User");

        logOutButton2.setBackground(new java.awt.Color(40, 64, 97));
        logOutButton2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        logOutButton2.setForeground(new java.awt.Color(255, 255, 255));
        logOutButton2.setText("Log out");
        logOutButton2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        logOutButton2.setOpaque(true);
        logOutButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout homePageTechnicianLayout = new javax.swing.GroupLayout(homePageTechnician);
        homePageTechnician.setLayout(homePageTechnicianLayout);
        homePageTechnicianLayout.setHorizontalGroup(
            homePageTechnicianLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homePageTechnicianLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(officeManagerText2, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(146, 146, 146)
                .addComponent(officeManagerWelcomeText2, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 209, Short.MAX_VALUE)
                .addComponent(logOutButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        homePageTechnicianLayout.setVerticalGroup(
            homePageTechnicianLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, homePageTechnicianLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(homePageTechnicianLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(officeManagerText2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(officeManagerWelcomeText2, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(logOutButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout homePageTBarLayout = new javax.swing.GroupLayout(homePageTBar);
        homePageTBar.setLayout(homePageTBarLayout);
        homePageTBarLayout.setHorizontalGroup(
            homePageTBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, homePageTBarLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(homePageTechnician, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        homePageTBarLayout.setVerticalGroup(
            homePageTBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homePageTBarLayout.createSequentialGroup()
                .addComponent(homePageTechnician, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        cardPanel2.add(homePageTBar, "homePageT");

        homePageRBar.setBackground(new java.awt.Color(33, 53, 80));
        homePageRBar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        homePageRBar.setMaximumSize(new java.awt.Dimension(900, 60));
        homePageRBar.setMinimumSize(new java.awt.Dimension(900, 60));

        homePageReceptionist.setBackground(new java.awt.Color(33, 53, 80));
        homePageReceptionist.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        officeManagerText3.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        officeManagerText3.setForeground(new java.awt.Color(255, 255, 255));
        officeManagerText3.setText("Receptionist");

        officeManagerWelcomeText3.setFont(new java.awt.Font("Lucida Grande", 1, 26)); // NOI18N
        officeManagerWelcomeText3.setForeground(new java.awt.Color(255, 255, 255));
        officeManagerWelcomeText3.setText("Welcome, User");

        logOutButton3.setBackground(new java.awt.Color(40, 64, 97));
        logOutButton3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        logOutButton3.setForeground(new java.awt.Color(255, 255, 255));
        logOutButton3.setText("Log out");
        logOutButton3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        logOutButton3.setOpaque(true);
        logOutButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout homePageReceptionistLayout = new javax.swing.GroupLayout(homePageReceptionist);
        homePageReceptionist.setLayout(homePageReceptionistLayout);
        homePageReceptionistLayout.setHorizontalGroup(
            homePageReceptionistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homePageReceptionistLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(officeManagerText3, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(146, 146, 146)
                .addComponent(officeManagerWelcomeText3, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 209, Short.MAX_VALUE)
                .addComponent(logOutButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        homePageReceptionistLayout.setVerticalGroup(
            homePageReceptionistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, homePageReceptionistLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(homePageReceptionistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(officeManagerText3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(officeManagerWelcomeText3, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(logOutButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout homePageRBarLayout = new javax.swing.GroupLayout(homePageRBar);
        homePageRBar.setLayout(homePageRBarLayout);
        homePageRBarLayout.setHorizontalGroup(
            homePageRBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, homePageRBarLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(homePageReceptionist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        homePageRBarLayout.setVerticalGroup(
            homePageRBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homePageRBarLayout.createSequentialGroup()
                .addComponent(homePageReceptionist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        cardPanel2.add(homePageRBar, "homePageR");

        createNewTaskOM.setBackground(new java.awt.Color(33, 53, 80));
        createNewTaskOM.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        homeButtonNewTask.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        homeButtonNewTask.setForeground(new java.awt.Color(255, 255, 255));
        homeButtonNewTask.setText("Home");

        createTaskHead.setFont(new java.awt.Font("Lucida Grande", 1, 26)); // NOI18N
        createTaskHead.setForeground(new java.awt.Color(255, 255, 255));
        createTaskHead.setText("Create Task");

        logOutButton4.setBackground(new java.awt.Color(40, 64, 97));
        logOutButton4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        logOutButton4.setForeground(new java.awt.Color(255, 255, 255));
        logOutButton4.setText("Log out");
        logOutButton4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        logOutButton4.setOpaque(true);
        logOutButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout createNewTaskOMLayout = new javax.swing.GroupLayout(createNewTaskOM);
        createNewTaskOM.setLayout(createNewTaskOMLayout);
        createNewTaskOMLayout.setHorizontalGroup(
            createNewTaskOMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createNewTaskOMLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(homeButtonNewTask, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(146, 146, 146)
                .addComponent(createTaskHead, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 209, Short.MAX_VALUE)
                .addComponent(logOutButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        createNewTaskOMLayout.setVerticalGroup(
            createNewTaskOMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createNewTaskOMLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(createNewTaskOMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(homeButtonNewTask, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(createTaskHead, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(logOutButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout createNewTaskBarLayout = new javax.swing.GroupLayout(createNewTaskBar);
        createNewTaskBar.setLayout(createNewTaskBarLayout);
        createNewTaskBarLayout.setHorizontalGroup(
            createNewTaskBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createNewTaskBarLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(createNewTaskOM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        createNewTaskBarLayout.setVerticalGroup(
            createNewTaskBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createNewTaskBarLayout.createSequentialGroup()
                .addComponent(createNewTaskOM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        cardPanel2.add(createNewTaskBar, "createNewTaskBar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cardPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(cardPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(cardPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(cardPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 648, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_loginButtonActionPerformed

    private void loginPageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginPageButtonActionPerformed
        // TODO add your handling code here:
        card1.show(cardPanel1, "login");
        card2.show(cardPanel2, "welcomeBar2");
    }//GEN-LAST:event_loginPageButtonActionPerformed

    private void RestorePageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RestorePageButtonActionPerformed
        // TODO add your handling code here:
        card1.show(cardPanel1, "restore");
        card2.show(cardPanel2, "welcomeBar2");
    }//GEN-LAST:event_RestorePageButtonActionPerformed

    private void RestoreButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RestoreButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RestoreButtonActionPerformed

    private void chooseFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseFileButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chooseFileButtonActionPerformed

    private void tempButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tempButtonActionPerformed
        // TODO add your handling code here:
        card1.show(cardPanel1, "createUser");
        card2.show(cardPanel2, "welcomeBar2");
    }//GEN-LAST:event_tempButtonActionPerformed

    private void NewRepeatPasswordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewRepeatPasswordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NewRepeatPasswordFieldActionPerformed

    private void NewPasswordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewPasswordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NewPasswordFieldActionPerformed

    private void createUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createUserButtonActionPerformed
        // TODO add your handling code here:
        //validate here
        if (userFirstNameField.getText().length() > 10) {
            System.out.println("name cannot be longer than 10 characters");
        }

    }//GEN-LAST:event_createUserButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void homePageOMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homePageOMActionPerformed
        // TODO add your handling code here:
        card1.show(cardPanel1, "officeManagerHomePage");
        card2.show(cardPanel2, "homePageOMBar");
    }//GEN-LAST:event_homePageOMActionPerformed

    private void acceptPaymentOfficeManagerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptPaymentOfficeManagerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_acceptPaymentOfficeManagerActionPerformed

    private void homePageSMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homePageSMActionPerformed
        // TODO add your handling code here:
        card1.show(cardPanel1, "shiftManagerHomePage");
        card2.show(cardPanel2, "homePageSMBar");
    }//GEN-LAST:event_homePageSMActionPerformed

    private void acceptPaymentShiftManagerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptPaymentShiftManagerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_acceptPaymentShiftManagerActionPerformed

    private void jobEnquiryTechnicianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jobEnquiryTechnicianActionPerformed
        card1.show(cardPanel1, "jobEnquiryPage");
    }//GEN-LAST:event_jobEnquiryTechnicianActionPerformed

    private void homePageTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homePageTActionPerformed
        // TODO add your handling code here:
        card1.show(cardPanel1, "technicianHomePage");
        card2.show(cardPanel2, "homePageT");

    }//GEN-LAST:event_homePageTActionPerformed

    private void acceptPaymentReceptionistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptPaymentReceptionistActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_acceptPaymentReceptionistActionPerformed

    private void homePageRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homePageRActionPerformed
        // TODO add your handling code here:
        card1.show(cardPanel1, "receptionistHomePage");
        card2.show(cardPanel2, "homePageR");
    }//GEN-LAST:event_homePageRActionPerformed

    private void createNewTaskButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createNewTaskButtonActionPerformed

        //Initialise values
        boolean valid = true;
        String description = descriptionNewTaskField.getText();
        double price = Double.parseDouble(priceNewTaskField.getText());
        int duration_min = Integer.parseInt((String) durationNewTaskMinsDD.getSelectedItem());
        int duration_hours = Integer.parseInt((String) durationNewTaskDD.getSelectedItem());
        String Department_department_code = (String) departmentNewTaskDD.getSelectedItem();
        int shelf_slot = Integer.parseInt((String) shelfSlotTaskDD.getSelectedItem());

        duration_min += duration_hours * 60;

        //Check fields are not empty
        if (description.isEmpty() || price == 0) {
            valid = false;
            JOptionPane.showMessageDialog(null, "Please insert data");
        } else {
            valid = true;
        }

        //Will only execute method in controller if all preconditions are met
        if (valid) {
            if (controller.createNewTask(description, duration_min, price, Department_department_code, shelf_slot)) {
                JOptionPane.showMessageDialog(null, "Task created");
            } else {
                JOptionPane.showMessageDialog(null, "Failed to create Task");
            }
        }
    }//GEN-LAST:event_createNewTaskButtonActionPerformed

    private void cancelButtonCreateTaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonCreateTaskActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cancelButtonCreateTaskActionPerformed

    private void durationNewTaskDDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_durationNewTaskDDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_durationNewTaskDDActionPerformed

    private void shelfSlotTaskDDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shelfSlotTaskDDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_shelfSlotTaskDDActionPerformed

    private void departmentNewTaskDDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departmentNewTaskDDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_departmentNewTaskDDActionPerformed

    private void tasksOfficeManagerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tasksOfficeManagerActionPerformed
        // TODO add your handling code here:
        card1.show(cardPanel1, "taskPage");
        //card2.show(cardPanel2, "createNewTaskBar");
    }//GEN-LAST:event_tasksOfficeManagerActionPerformed

    private void logOutButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutButton3ActionPerformed
        // TODO add your handling code here:
        this.deleteJobTableInformation();
        controller.clearJob();
        card1.show(cardPanel1, "welcome");
        card2.show(cardPanel2, "welcomeBar2");
    }//GEN-LAST:event_logOutButton3ActionPerformed

    private void logOutButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutButton2ActionPerformed
        // TODO add your handling code here:
        this.deleteTaskEnquiryTableInformation();
        this.deleteStandardJobTableInformation();
        this.deleteStandardJobTableInformation();
        controller.clearStandardJobTasks();
        card1.show(cardPanel1, "welcome");
        card2.show(cardPanel2, "welcomeBar2");
    }//GEN-LAST:event_logOutButton2ActionPerformed

    private void logOutButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutButton1ActionPerformed
        // TODO add your handling code here:
        card1.show(cardPanel1, "welcome");
        card2.show(cardPanel2, "welcomeBar2");
    }//GEN-LAST:event_logOutButton1ActionPerformed

    private void logOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutButtonActionPerformed
        // TODO add your handling code here:
        card1.show(cardPanel1, "welcome");
        card2.show(cardPanel2, "welcomeBar2");
    }//GEN-LAST:event_logOutButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        card1.show(cardPanel1, "welcome");
        card2.show(cardPanel2, "welcomeBar1");
    }//GEN-LAST:event_backButtonActionPerformed

    private void logOutButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_logOutButton4ActionPerformed

    private void userRoleDDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userRoleDDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userRoleDDActionPerformed

    private void durationNewTaskMinsDDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_durationNewTaskMinsDDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_durationNewTaskMinsDDActionPerformed

    private void createTaskButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createTaskButtonActionPerformed
        card1.show(cardPanel1, "createNewTask");
    }//GEN-LAST:event_createTaskButtonActionPerformed

    private void manageTasksButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageTasksButtonActionPerformed
        //Get task information from controller class
        updateTaskTable();
        card1.show(cardPanel1, "manageTasksPage");


    }//GEN-LAST:event_manageTasksButtonActionPerformed

    private void updateTaskTable() {
        //Get task information from controller class
        ArrayList<Task> tasks = controller.getTasks();
        DefaultTableModel taskTableModel = (DefaultTableModel) taskTable.getModel();

        //Set table
        Object[] row = new Object[4];
        for (int i = 0; i < tasks.size(); i++) {
            row[0] = tasks.get(i).getTaskID();
            row[1] = tasks.get(i).getDescription();
            row[2] = tasks.get(i).getDepartmentCode();
            row[3] = tasks.get(i).getShelfSlot();
            taskTableModel.addRow(row);
        }

    }

    private void deleteTaskTableInformation() {
        DefaultTableModel taskTableModel = (DefaultTableModel) taskTable.getModel();
        taskTableModel.setRowCount(0);
    }

    private void deleteJobTableInformation() {
        DefaultTableModel jobTableModel = (DefaultTableModel) jobSearchResultsTable.getModel();
        jobTableModel.setRowCount(0);
    }

    private void deleteJobEnquiryTable() {
        DefaultTableModel jobTableModel = (DefaultTableModel) jobEnquiryTableResults.getModel();
        jobTableModel.setRowCount(0);
    }

    private void deleteStandardJobTableInformation() {
        DefaultTableModel standardJobTableModel = (DefaultTableModel) standardJobResults.getModel();
        standardJobTableModel.setRowCount(0);
    }

    private void deleteTaskEnquiryTableInformation() {
        DefaultTableModel taskTableModel = (DefaultTableModel) taskResultsTable.getModel();
        taskTableModel.setRowCount(0);
    }

    private void deleteReminderLettersTableInformation() {
        DefaultTableModel reminderLettersTableModel = (DefaultTableModel) reminderLettersTable.getModel();
        reminderLettersTableModel.setRowCount(0);
    }

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.deleteTaskTableInformation();
        card1.show(cardPanel1, "taskPage");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed

        //Get row index
        if ((taskTable.getSelectedRow() < 0)) {
            JOptionPane.showMessageDialog(null, "Please select a row");
        } else {
            //Set task id 
            taskIDText.setText(String.valueOf(taskTable.getModel().getValueAt(taskTable.getSelectedRow(), 0)));
        }
        card1.show(cardPanel1, "editTaskPage");


    }//GEN-LAST:event_editButtonActionPerformed

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        card1.show(cardPanel1, "manageTasksPage");
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
//Initialise values:
        boolean valid = true;
        String taskID = taskIDText.getText();
        String description = descriptionText.getText();
        String department = (String) departmentComboBox.getSelectedItem();
        String shelfSlot = (shelfSlotText.getText());
        String price = (priceText.getText());
        //String is used for price and shelfSlot but will be converted to int/double when checking values below

        //Preconditions:
        if (description.equals("") || department.equals("")) {
            valid = false;
            JOptionPane.showMessageDialog(null, "Please insert data");
        }
        //Check shelf slot value is numeric
        try {
            Integer.parseInt(shelfSlot);
        } catch (NumberFormatException e) {
            valid = false;
            JOptionPane.showMessageDialog(null, "Enter numeric values for shelfSlot");
        }
        //Check if price value is numeric
        try {
            Double.parseDouble(price);
        } catch (NumberFormatException e) {
            valid = false;
            JOptionPane.showMessageDialog(null, "Enter numeric values for price");
        }
        //Check if task is numeric
        try {
            Integer.parseInt(price);
        } catch (NumberFormatException e) {
            valid = false;
            JOptionPane.showMessageDialog(null, "Enter numeric values for Task ID");
        }

        //Save new values for task
        if (valid) {

            if (controller.doesTaskExist(taskID)) {
                if (controller.updateTask(Integer.parseInt(taskID), description, Integer.parseInt(shelfSlot), Double.parseDouble(price), department)) {
                    JOptionPane.showMessageDialog(null, "Failed to update task");
                } else {
                    JOptionPane.showMessageDialog(null, "Task Updated");
                    //Update Task table
                    deleteTaskTableInformation();
                    updateTaskTable();
                    card1.show(cardPanel1, "manageTasksPage");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Task does not exist");
            }
        }

    }//GEN-LAST:event_saveButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed

        int taskID = -1;

        if ((taskTable.getSelectedRow() >= 0)) {
            //Get task id from table
            taskID = (Integer) taskTable.getModel().getValueAt(taskTable.getSelectedRow(), 0);
            //Delete task from table

            if (!controller.deleteTask(taskID)) {
                //Update new Task table
                deleteTaskTableInformation();
                updateTaskTable();
            } else {
                JOptionPane.showMessageDialog(null, "Please select a row");
            }
        }

    }//GEN-LAST:event_deleteButtonActionPerformed

    private void collectJobButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_collectJobButtonActionPerformed

        int jobNumber = -1;
        //Get row index
        if ((jobSearchResultsTable.getSelectedRow() < 0)) {
            JOptionPane.showMessageDialog(null, "Please select a row");
        } else {
            //Check row has values and job is completed and not collected     
            if ((jobSearchResultsTable.getModel().getValueAt(jobSearchResultsTable.getSelectedRow(), 3).equals("Completed"))
                    && (jobSearchResultsTable.getModel().getValueAt(jobSearchResultsTable.getSelectedRow(), 4).toString().equals("false"))) {

                //Get job Number from table
                jobNumber = (Integer) jobSearchResultsTable.getModel().getValueAt(jobSearchResultsTable.getSelectedRow(), 0);

                //Check if customer is valued
                if (controller.isCustomerValued(jobNumber)) {
                    int dialogResult = JOptionPane.showConfirmDialog(null, "Would You Like to pay later?");
                    if (dialogResult == JOptionPane.NO_OPTION) {
                        //Parse to payment page with invoice number
                        System.out.println("Payment page... invoice number is " + controller.getInvoiceNumber(jobNumber) + ", job number is: " + jobNumber);
                        //Insert code for job payment here ...
                    }
                } else {
                    System.out.println("Payment page... invoice number is " + controller.getInvoiceNumber(jobNumber) + ", job number is: " + jobNumber);
                    //Insert code for job payment here ...
                }
            } else {
                JOptionPane.showMessageDialog(null, "Job cannot be collected");
            }
        }


    }//GEN-LAST:event_collectJobButtonActionPerformed

    private void backButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButonActionPerformed
        this.deleteJobTableInformation();
        controller.clearJob();
        card1.show(cardPanel1, "searchJobPage");
    }//GEN-LAST:event_backButonActionPerformed

    private void searchJobButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchJobButtonActionPerformed
        boolean valid = true;
        String jobNumber = jobNumberTextField.getText();

        if (jobNumber.equals("")) {
            valid = false;
            JOptionPane.showMessageDialog(null, "Enter a job number");
        }

        if (valid) {
            if (controller.doesJobExist(jobNumber, true)) {
                //Get job information from controller 
                controller.searchAllJobsUnderCriteria(Integer.parseInt(jobNumber));
                //Update table
                updateCollectJobTable();
                //Show job enquiry results page
                card1.show(cardPanel1, "jobSearchResultsPage");
            } else {
                JOptionPane.showMessageDialog(null, "Job number does not exist");
            }
        }
    }//GEN-LAST:event_searchJobButtonActionPerformed

    private void searchCustomerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchCustomerButtonActionPerformed
        boolean valid = true;
        String customerNumber = customerNumberText.getText();

        if (customerNumber.equals("")) {
            valid = false;
            JOptionPane.showMessageDialog(null, "Enter a customer number");
        }
        if (valid) {
            if (controller.doesJobExist(customerNumber, false)) {
                controller.addJob(customerNumber);
                updateCollectJobTable();
                card1.show(cardPanel1, "jobSearchResultsPage");
            } else {
                JOptionPane.showMessageDialog(null, "Customer number does not exist");
            }

        }
    }//GEN-LAST:event_searchCustomerButtonActionPerformed

    private void jobReceptionistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jobReceptionistActionPerformed
        card1.show(cardPanel1, "searchJobPage");
    }//GEN-LAST:event_jobReceptionistActionPerformed

    private void viewStandardJobButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewStandardJobButtonActionPerformed

        String standardJobCode = "";
        //Get row index
        if ((standardJobResults.getSelectedRow() >= 0)) {
            //Check row has values
            if (standardJobResults.getModel().getValueAt(standardJobResults.getSelectedRow(), 0) != null) {

                //Get job Number from table
                standardJobCode = (String) standardJobResults.getModel().getValueAt(standardJobResults.getSelectedRow(), 0);
                //Set title text
                standardJobCodeLabel.setText(standardJobCode);

//Get task information
                controller.getTasksFromStandardJobCode(standardJobCode, Integer.parseInt(jobNumberLabel.getText()));
                //Update standard job table
                this.updateTaskEnquiryTable(standardJobCode);
                //Show standard job search results
                card1.show(cardPanel1, "taskSearchResultsJobEnquiryPage");

                //Set standard Job index
                int standardJobIndex = standardJobResults.getSelectedRow();
                standardJobIndexLabel.setText(Integer.toString(standardJobIndex));
            } else {
                JOptionPane.showMessageDialog(null, "Job is still in progress");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Please select a row");
        }


    }//GEN-LAST:event_viewStandardJobButtonActionPerformed

    private void backJobSearchResultsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJobSearchResultsButtonActionPerformed
        this.deleteStandardJobTableInformation();
        controller.clearStandardJobList();
        card1.show(cardPanel1, "jobEnquirySearchResultsPage");
    }//GEN-LAST:event_backJobSearchResultsButtonActionPerformed

    private void searchJobNumberJobEnquiryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchJobNumberJobEnquiryButtonActionPerformed
        boolean valid = true;
        String jobNumber = jobNumberText.getText();

        if (jobNumber.equals("")) {
            valid = false;
            JOptionPane.showMessageDialog(null, "Enter a job number");
        }
        if (valid) {
            if (controller.doesJobExist(jobNumber, true)) {
                controller.searchAllJobsUnderCriteria(Integer.parseInt(jobNumber));
                //update table
                this.updateJobEnquiryTable();
                card1.show(cardPanel1, "jobEnquirySearchResultsPage");

            } else {
                JOptionPane.showMessageDialog(null, "Job number does not exist");
            }

        }
    }//GEN-LAST:event_searchJobNumberJobEnquiryButtonActionPerformed

    private void backJobEnquiryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJobEnquiryButtonActionPerformed
        controller.clearJob();
        controller.clearStandardJobTasks();
        this.deleteJobEnquiryTable();
        card1.show(cardPanel1, "jobEnquiryPage");
    }//GEN-LAST:event_backJobEnquiryButtonActionPerformed

    private void viewJobEnquiryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewJobEnquiryButtonActionPerformed

        int jobNumber = -1;
        //Get row index
        if ((jobEnquiryTableResults.getSelectedRow() >= 0)) {
            //Check row has values
            if (jobEnquiryTableResults.getModel().getValueAt(jobEnquiryTableResults.getSelectedRow(), 0) != null) {

                //Get job Number from table
                jobNumber = (Integer) jobEnquiryTableResults.getModel().getValueAt(jobEnquiryTableResults.getSelectedRow(), 0);
                jobNumberLabel.setText(Integer.toString(jobNumber));
                jobIndexLabel.setText(String.valueOf(jobEnquiryTableResults.getSelectedRow()));

                //Get standard jobs from job number
                controller.getStandardJobsFromJobNumber(jobNumber);

                //Update standard job table
                this.updateStandardJobTable();
                //Show standard job search results
                card1.show(cardPanel1, "standardJobSearchResultsJobEnquiryPage");
            } else {
                JOptionPane.showMessageDialog(null, "Job is still in progress");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row");
        }


    }//GEN-LAST:event_viewJobEnquiryButtonActionPerformed

    private void taskEnquiryBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_taskEnquiryBackButtonActionPerformed
        this.deleteTaskEnquiryTableInformation();
        controller.clearTaskList();
        card1.show(cardPanel1, "standardJobSearchResultsJobEnquiryPage");
    }//GEN-LAST:event_taskEnquiryBackButtonActionPerformed

    private void updateTaskButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateTaskButtonActionPerformed

        int taskID = -1;
        //Get row index
        if ((taskResultsTable.getSelectedRow() >= 0)) {
            //Check row has values
            if (taskResultsTable.getModel().getValueAt(taskResultsTable.getSelectedRow(), 0) != null) {
                taskID = (Integer) (taskResultsTable.getModel().getValueAt(taskResultsTable.getSelectedRow(), 0));
                Object[] possibilities = {"Completed", "In progress", "Not started"};
                String taskStatus = (String) JOptionPane.showInputDialog(null, "Update Task ID: " + taskID, "Task Update", JOptionPane.PLAIN_MESSAGE, null, possibilities, "In progress");

                controller.updateTaskStatusInDatabase(taskStatus, taskResultsTable.getSelectedRow());

            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row");
        }

        //Check if standard job is in progress
        if (controller.checkIfStandardJobIsInProgress(standardJobCodeLabel.getText(), Integer.parseInt(jobNumberLabel.getText()))) {
            //Mark job and standard job as in progress
            controller.updateStandardJobStatus(Integer.parseInt(jobNumberLabel.getText()), Integer.parseInt(standardJobIndexLabel.getText()), "In progress");
            controller.updateJobStatus("In progress", Integer.parseInt(jobIndexLabel.getText()));

            //Check if all tasks are completed
            if (controller.checkIfAllTasksAreCompleted(standardJobCodeLabel.getText(), Integer.parseInt(jobNumberLabel.getText()))) {
                //Update standard job status
                controller.updateStandardJobStatus(Integer.parseInt(jobNumberLabel.getText()), Integer.parseInt(standardJobIndexLabel.getText()), "Completed");

                //Check if all standard jobs are completed
                if (controller.checkIfAllStandardJobsAreCompleted(Integer.parseInt(jobNumberLabel.getText()))) {
                    //Update job status
                    controller.updateJobStatus("Completed", Integer.parseInt(jobIndexLabel.getText()));
                } else {
                    controller.updateJobStatus("In progress", Integer.parseInt(jobIndexLabel.getText()));
                }
            } else {
                controller.updateStandardJobStatus(Integer.parseInt(jobNumberLabel.getText()), Integer.parseInt(standardJobIndexLabel.getText()), "In progress");
            }

        } else {
            controller.updateStandardJobStatus(Integer.parseInt(jobNumberLabel.getText()), Integer.parseInt(standardJobIndexLabel.getText()), "Not started");
            //Check if job is in progress
            if (controller.checkIfJobIsInProgress(Integer.parseInt(jobNumberLabel.getText()))) {
                controller.updateJobStatus("In progress", Integer.parseInt(jobIndexLabel.getText()));
            } else {
                controller.updateJobStatus("Not started", Integer.parseInt(jobIndexLabel.getText()));
            }
        }

        //Update task table
        this.deleteTaskEnquiryTableInformation();
        this.updateTaskEnquiryTable(standardJobCodeLabel.getText());
        //Update standard job table
        this.deleteStandardJobTableInformation();
        this.updateStandardJobTable();
        //Update job table
        this.deleteJobEnquiryTable();
        this.updateJobEnquiryTable();
    }//GEN-LAST:event_updateTaskButtonActionPerformed

    private void searchJobEnquiryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchJobEnquiryButtonActionPerformed
        String status = (String) jobStatusComboBox.getSelectedItem();
        String priority = (String) jobPriorityComboBox.getSelectedItem();
        String collected = (String) jobCollectedComboBox.getSelectedItem();

        boolean valid = true;

        //Check if user wants to search for a collected job in progress
        if (collected.equals("Yes") && status.equals("In progress")) {
            JOptionPane.showMessageDialog(null, "Invalid search criteria");
            valid = false;
        }

        int collectedValue;
        if (collected.equals("No")) {
            collectedValue = 0;
        } else {
            collectedValue = 1;
        }

        if (valid) {
            if (controller.doesJobUnderJobCriteriaExist(status, priority, collectedValue)) {
                controller.getListOfJobNumbers(status, priority, collectedValue);
                this.updateJobEnquiryTable();
                card1.show(cardPanel1, "jobEnquirySearchResultsPage");
            } else {
                JOptionPane.showMessageDialog(null, "No jobs exists");
            }
        }
    }//GEN-LAST:event_searchJobEnquiryButtonActionPerformed

    private void searchCustomerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchCustomerBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchCustomerBtnActionPerformed

    private void reminderLettersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reminderLettersButtonActionPerformed
        this.updateReminderLettersTable();
        card1.show(cardPanel1, "reminderLettersTablePage");
        //Update reminder letters table

    }//GEN-LAST:event_reminderLettersButtonActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        card1.show(cardPanel1, "officeManagerHomePage");
        card2.show(cardPanel2, "homePageOMBar");
    }//GEN-LAST:event_backBtnActionPerformed

    private void backCustomerPageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backCustomerPageButtonActionPerformed
        this.deleteReminderLettersTableInformation();
        card1.show(cardPanel1, "officeManagerCustomerPage");
    }//GEN-LAST:event_backCustomerPageButtonActionPerformed

    private void manageCustomersOfficeManagerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageCustomersOfficeManagerActionPerformed
        card1.show(cardPanel1, "officeManagerCustomerPage");
    }//GEN-LAST:event_manageCustomersOfficeManagerActionPerformed

    private void viewReminderLetterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewReminderLetterButtonActionPerformed
        // TODO add your handling code here:
        if (reminderLettersTable.getSelectedRow() >= 0) {

            try {
                Document document = new Document();
                try {
                    PdfWriter.getInstance(document, new FileOutputStream("ReminderLetter.pdf"));
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                document.open();
                document.add(new Paragraph("Invoice reminder"));
                document.add(new Paragraph("  "));
                PdfPTable pdfTable = new PdfPTable(reminderLettersTable.getColumnCount());
                //adding table headers
                for (int i = 0; i < reminderLettersTable.getColumnCount(); i++) {
                    pdfTable.addCell(reminderLettersTable.getColumnName(i));
                }

                //Convert date to string
                DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");

                //Add rows to table
                String date = dateFormat.format(controller.getInvoices().get(reminderLettersTable.getSelectedRow()).getDate());
                pdfTable.addCell(controller.getInvoices().get(reminderLettersTable.getSelectedRow()).getCustomerName());
                pdfTable.addCell(String.valueOf(controller.getInvoices().get(reminderLettersTable.getSelectedRow()).getInvoiceNumber()));
                pdfTable.addCell(date);
                pdfTable.addCell(String.valueOf(controller.getInvoices().get(reminderLettersTable.getSelectedRow()).getAmountDue()));

                document.add(pdfTable);
                document.add(new Paragraph("According to our records, "
                        + "it appears that we have not yet received payment of the above invoice,"
                        + "for photographic work done in our laboratory. "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph("We would appreciate payment at your earliest convenience."));
                document.add(new Paragraph(" "));
                document.add(new Paragraph("If you have already sent a payment to us recently, please accept our apologies. "));
                document.add(new Paragraph(" "));
                document.add(new Paragraph("Yours sincereley,"));
                document.add(new Paragraph("   G. Lancaster "));
                document.close();
                JOptionPane.showMessageDialog(null, "PDF Sucessfully created");
            } catch (DocumentException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            JOptionPane.showMessageDialog(null, "Please select a row");
        }
    }//GEN-LAST:event_viewReminderLetterButtonActionPerformed

    private void backRecpHPButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backRecpHPButtonActionPerformed
        card1.show(cardPanel1, "receptionistHomePage");
    }//GEN-LAST:event_backRecpHPButtonActionPerformed

    private void updateTaskEnquiryTable(String standardJobCode) {
        DefaultTableModel taskTableModel = (DefaultTableModel) taskResultsTable.getModel();
        //taskTableModel.setRowCount(tasks.size());

        //Insert task information into table
        Object[] row = new Object[5];
        for (int i = 0; i < controller.getTaskList().size(); i++) {
            row[0] = controller.getTaskList().get(i).getTaskID();
            row[1] = controller.getTaskList().get(i).getDescription();
            row[2] = controller.getTaskList().get(i).getDepartmentCode();
            row[3] = controller.getTaskList().get(i).getShelfSlot();
            row[4] = controller.getTaskList().get(i).getStatus();
            //taskTableModel.insertRow(0, row);
            taskTableModel.addRow(row);
        }
    }

    private void updateReminderLettersTable() {
        DefaultTableModel reminderLettersTableModel = (DefaultTableModel) reminderLettersTable.getModel();
        Object[] row = new Object[4];
        for (int i = 0; i < controller.getInvoices().size(); i++) {
            row[0] = controller.getInvoices().get(i).getCustomerName();
            row[1] = controller.getInvoices().get(i).getInvoiceNumber();
            row[2] = controller.getInvoices().get(i).getDate();
            row[3] = controller.getInvoices().get(i).getAmountDue();
            reminderLettersTableModel.addRow(row);
        }
    }

    private void updateStandardJobTable() {

        DefaultTableModel standardJobTableModel = (DefaultTableModel) standardJobResults.getModel();
        Object[] row = new Object[3];
        for (int i = 0; i < controller.getStandardJobList().size(); i++) {
            row[0] = controller.getStandardJobList().get(i).getCode();
            row[1] = controller.getStandardJobList().get(i).getDescription();
            row[2] = controller.getStandardJobList().get(i).getStatus();
            standardJobTableModel.addRow(row);
        }
    }

    private void updateCollectJobTable() {
        //Get job information from controller class

        //ArrayList<JobDetails> jobs = controller.getJob();
        DefaultTableModel jobTableModel = (DefaultTableModel) jobSearchResultsTable.getModel();
        //jobTableModel.setRowCount(controller.getJob().size());
        //Set table
        Object[] row = new Object[5];
        for (int i = 0; i < controller.getJob().size(); i++) {
            row[0] = controller.getJob().get(i).getJobNumber();
            row[1] = controller.getJob().get(i).getIssuedBy();
            row[2] = controller.getJob().get(i).getDeadline();
            row[3] = controller.getJob().get(i).getStatus();
            row[4] = controller.getJob().get(i).isIsCollected();

            jobTableModel.addRow(row);
        }
    }

    private void updateJobEnquiryTable() {
        //ArrayList<JobDetails> jobs = controller.getJob();
        DefaultTableModel jobEnquiryTableModel = (DefaultTableModel) jobEnquiryTableResults.getModel();
        //Set table
        //jobEnquiryTableModel.setRowCount(controller.getJob().size());
        Object[] row = new Object[5];
        for (int i = 0; i < controller.getJob().size(); i++) {
            row[0] = controller.getJob().get(i).getJobNumber();
            row[1] = controller.getJob().get(i).getIssuedBy();
            row[2] = controller.getJob().get(i).getDateReceived();
            row[3] = controller.getJob().get(i).getDeadline();
            row[4] = controller.getJob().get(i).getStatus();
            jobEnquiryTableModel.addRow(row);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new MainFrame(controller).setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BAPERSLabel;
    private javax.swing.JPasswordField NewPasswordField;
    private javax.swing.JPasswordField NewRepeatPasswordField;
    private javax.swing.JLabel ReenterPasswordLabel;
    private javax.swing.JButton RestoreButton;
    private javax.swing.JButton RestorePageButton;
    private javax.swing.JLabel RoleLabel;
    private javax.swing.JButton acceptPaymentOfficeManager;
    private javax.swing.JButton acceptPaymentReceptionist;
    private javax.swing.JButton acceptPaymentShiftManager;
    private javax.swing.JButton backBtn;
    private javax.swing.JButton backButon;
    private javax.swing.JButton backButton;
    private javax.swing.JButton backCustomerPageButton;
    private javax.swing.JButton backJobEnquiryButton;
    private javax.swing.JButton backJobSearchResultsButton;
    private javax.swing.JButton backRecpHPButton;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton cancelButtonCreateTask;
    private javax.swing.JButton cancelJobEnquiryButton;
    private javax.swing.JPanel cardPanel1;
    private javax.swing.JPanel cardPanel2;
    private javax.swing.JButton chooseFileButton;
    private javax.swing.JButton collectJobButton;
    private javax.swing.JPanel createNewTaskBar;
    private javax.swing.JButton createNewTaskButton;
    private javax.swing.JPanel createNewTaskOM;
    private javax.swing.JButton createTaskButton;
    private javax.swing.JLabel createTaskHead;
    private javax.swing.JPanel createTaskPage;
    private javax.swing.JButton createUserButton;
    private javax.swing.JPanel createUserPage;
    private javax.swing.JTextField customerNumberText;
    private javax.swing.JButton deleteButton;
    private javax.swing.JComboBox<String> departmentComboBox;
    private javax.swing.JComboBox<String> departmentNewTaskDD;
    private javax.swing.JLabel departmentNewTaskLabel;
    private javax.swing.JLabel descriptionLabel;
    private javax.swing.JTextField descriptionNewTaskField;
    private javax.swing.JTextField descriptionText;
    private javax.swing.JLabel durationLabel;
    private javax.swing.JComboBox<String> durationNewTaskDD;
    private javax.swing.JComboBox<String> durationNewTaskMinsDD;
    private javax.swing.JButton editButton;
    private javax.swing.JPanel editTaskPage;
    private javax.swing.JTextField fileChosenField;
    private javax.swing.JLabel firstnameLabel;
    private javax.swing.JLabel homeButtonNewTask;
    private javax.swing.JButton homePageOM;
    private javax.swing.JPanel homePageOMBar;
    private javax.swing.JButton homePageR;
    private javax.swing.JPanel homePageRBar;
    private javax.swing.JPanel homePageReceptionist;
    private javax.swing.JButton homePageSM;
    private javax.swing.JButton homePageT;
    private javax.swing.JPanel homePageTBar;
    private javax.swing.JPanel homePageTechnician;
    private javax.swing.JPanel homePagesSMBar;
    private javax.swing.JLabel hoursLabel;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JComboBox<String> jobCollectedComboBox;
    private javax.swing.JPanel jobEnquiryPage;
    private javax.swing.JPanel jobEnquirySearchResultsPage;
    private javax.swing.JTable jobEnquiryTableResults;
    private javax.swing.JButton jobEnquiryTechnician;
    private javax.swing.JLabel jobIndexLabel;
    private javax.swing.JLabel jobNumberLabel;
    private javax.swing.JLabel jobNumberLabel1;
    private javax.swing.JTextField jobNumberText;
    private javax.swing.JTextField jobNumberTextField;
    private javax.swing.JButton jobOfficeManager;
    private javax.swing.JComboBox<String> jobPriorityComboBox;
    private javax.swing.JLabel jobPriorityLabel;
    private javax.swing.JLabel jobPriorityLabel2;
    private javax.swing.JButton jobReceptionist;
    private javax.swing.JPanel jobSearchResultsPage;
    private javax.swing.JTable jobSearchResultsTable;
    private javax.swing.JButton jobShiftManager;
    private javax.swing.JComboBox<String> jobStatusComboBox;
    private javax.swing.JLabel jobStatusLabel;
    private javax.swing.JLabel lastnameLabel;
    private javax.swing.JButton logOutButton;
    private javax.swing.JButton logOutButton1;
    private javax.swing.JButton logOutButton2;
    private javax.swing.JButton logOutButton3;
    private javax.swing.JButton logOutButton4;
    private javax.swing.JButton loginButton;
    private javax.swing.JLabel loginLabel;
    private javax.swing.JPanel loginPage;
    private javax.swing.JButton loginPageButton;
    private javax.swing.JButton manageCustomersOfficeManager;
    private javax.swing.JButton manageTasksButton;
    private javax.swing.JPanel manageTasksPage;
    private javax.swing.JLabel minutesLabel;
    private javax.swing.JLabel newDescriptionLabel;
    private javax.swing.JLabel newDescriptionLabel1;
    private javax.swing.JLabel newDescriptionLabel2;
    private javax.swing.JLabel newDescriptionLabel3;
    private javax.swing.JLabel newTaskLabel1;
    private javax.swing.JLabel newUserLabel;
    private javax.swing.JPanel officeManagerCustomerPage;
    private javax.swing.JPanel officeManagerHomePage;
    private javax.swing.JPanel officeManagerPage;
    private javax.swing.JLabel officeManagerText;
    private javax.swing.JLabel officeManagerText1;
    private javax.swing.JLabel officeManagerText2;
    private javax.swing.JLabel officeManagerText3;
    private javax.swing.JLabel officeManagerWelcomeText;
    private javax.swing.JLabel officeManagerWelcomeText1;
    private javax.swing.JLabel officeManagerWelcomeText2;
    private javax.swing.JLabel officeManagerWelcomeText3;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JLabel priceLabel;
    private javax.swing.JTextField priceNewTaskField;
    private javax.swing.JTextField priceText;
    private javax.swing.JPanel receptionHomePage;
    private javax.swing.JPanel receptionistHomePage;
    private javax.swing.JButton reminderLettersButton;
    private javax.swing.JTable reminderLettersTable;
    private javax.swing.JPanel reminderLettersTablePage;
    private javax.swing.JButton reportsOfficeManager;
    private javax.swing.JButton reportsShiftManager;
    private javax.swing.JLabel restoreLabel;
    private javax.swing.JPanel restorePage;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton searchCustomerBtn;
    private javax.swing.JButton searchCustomerButton;
    private javax.swing.JButton searchJobButton;
    private javax.swing.JButton searchJobEnquiryButton;
    private javax.swing.JButton searchJobNumberJobEnquiryButton;
    private javax.swing.JPanel searchJobPage;
    private javax.swing.JButton settingsOfficeManager;
    private javax.swing.JButton settingsShiftManager;
    private javax.swing.JLabel shelfSlotNewTaskLabel;
    private javax.swing.JComboBox<String> shelfSlotTaskDD;
    private javax.swing.JTextField shelfSlotText;
    private javax.swing.JPanel shiftManagerHomePage;
    private javax.swing.JPanel shiftManagerPage;
    private javax.swing.JLabel standardJobCodeLabel;
    private javax.swing.JLabel standardJobIndexLabel;
    private javax.swing.JTable standardJobResults;
    private javax.swing.JPanel standardJobSearchResultsJobEnquiryPage;
    private javax.swing.JButton standardJobsOfficeManager;
    private javax.swing.JButton standardJobsShiftManager;
    private javax.swing.JButton taskEnquiryBackButton;
    private javax.swing.JLabel taskIDLabel;
    private javax.swing.JTextField taskIDText;
    private javax.swing.JPanel taskPage;
    private javax.swing.JTable taskResultsTable;
    private javax.swing.JPanel taskSearchResultsJobEnquiryPage;
    private javax.swing.JTable taskTable;
    private javax.swing.JButton tasksOfficeManager;
    private javax.swing.JButton tasksShiftManager;
    private javax.swing.JPanel technicianHomePage;
    private javax.swing.JPanel technicianPage;
    private javax.swing.JButton tempButton;
    private javax.swing.JButton updateTaskButton;
    private javax.swing.JTextField userFirstNameField;
    private javax.swing.JTextField userIDField;
    private javax.swing.JTextField userLastNameField;
    private javax.swing.JComboBox<String> userRoleDD;
    private javax.swing.JButton usersOfficeManager;
    private javax.swing.JButton viewJobEnquiryButton;
    private javax.swing.JButton viewReminderLetterButton;
    private javax.swing.JButton viewStandardJobButton;
    private javax.swing.JPanel welcomeBar1;
    private javax.swing.JPanel welcomeBar2;
    private javax.swing.JPanel welcomeBar3;
    private javax.swing.JPanel welcomeBar4;
    private javax.swing.JPanel welcomePage;
    // End of variables declaration//GEN-END:variables
}
